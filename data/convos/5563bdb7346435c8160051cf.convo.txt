idRef {
  id: "5563bdb7346435c8160051cf"
}
ui_name: "cc_banter-17_Sable"
nodes {
  idRef {
    id: "5563bdc6346435c8160051d5"
  }
  index: 0
  text: "$(l.name), how would you describe your mood in this moment?"
  branches {
    responseText: "Alert."
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  branches {
    responseText: "Curious."
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  branches {
    responseText: "Filled with explosive rage."
    nextNodeIndex: 1
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isSable"
}
nodes {
  idRef {
    id: "5563bddd346435c8160051da"
  }
  index: 1
  text: "Ah, I see.\n\n{{GM}}Sable scribbles a few words in a small, old-fashioned pocket notebook.{{/GM}}"
  branches {
    responseText: "What is that?"
    nextNodeIndex: 2
    auxiliaryLink: true
  }
  branches {
    responseText: "What are you doing?"
    nextNodeIndex: 2
    auxiliaryLink: true
  }
  branches {
    responseText: "I hope you brought enough for the whole class."
    nextNodeIndex: 2
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isSable"
}
nodes {
  idRef {
    id: "5563be03346435c8160051e2"
  }
  index: 2
  text: "Oh! Did I neglect to mention this before? \n\nI keep a journal, and thought it would be interesting to record your actions and attitudes over the course of our journey together. \n\nYou\342\200\231re at the start of a very interesting story, and I\342\200\231d like to see how it evolves."
  branches {
    responseText: ""
    nextNodeIndex: 3
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isSable"
}
nodes {
  idRef {
    id: "5563be1e346435c8160051e8"
  }
  index: 3
  text: "Far too many accounts of great events are entirely focused on the \342\200\234who\342\200\235 and the \342\200\234what\342\200\235: decisions made, persons killed. I\342\200\231m much more interested in the \342\200\234how\342\200\235 and the \342\200\234why\342\200\235: the reasoning behind your decisions, the motivations that drive you."
  branches {
    responseText: ""
    nextNodeIndex: 4
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isSable"
}
nodes {
  idRef {
    id: "5563be35346435c8160051eb"
  }
  index: 4
  text: ""
  branches {
    responseText: "Are you taking notes on a criminal conspiracy?"
    nextNodeIndex: 5
    onlyOnce: true
    idRef {
      id: "5563bf26346435c8160051f2"
    }
  }
  branches {
    responseText: "You aren\342\200\231t going to publish that, are you?"
    nextNodeIndex: 6
    onlyOnce: true
    idRef {
      id: "5563bf28346435c8160051f3"
    }
  }
  branches {
    responseText: "Okay, fine."
    nextNodeIndex: 7
  }
  branches {
    responseText: "Lose the notebook, Sable."
    nextNodeIndex: 8
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isSable"
  comment: "Empty interrogation node"
}
nodes {
  idRef {
    id: "5563bf23346435c8160051f1"
  }
  index: 5
  text: "Ha! When you put it that way, it does sound like a poor decision, doesn\342\200\231t it? \n\nYou needn\342\200\231t be concerned, though. I use a shorthand for all of our dealings, so even if this notebook were to fall into enemy hands, they wouldn\342\200\231t be able to make sense of it. \342\200\234Foxtrot felt alert while pursuing oranges at the greengrocer,\342\200\235 for example."
  branches {
    responseText: ""
    nextNodeIndex: 4
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isSable"
}
nodes {
  idRef {
    id: "5563bf4b346435c8160051fe"
  }
  index: 6
  text: "I hadn\342\200\231t even considered the possibility. \n\nIt\342\200\231s intended for my own edification: to keep track of our experiences together, so I can reflect on it later after the excitement has ended and draw what conclusions I can from the mission."
  branches {
    responseText: ""
    nextNodeIndex: 4
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isSable"
}
nodes {
  idRef {
    id: "5563bf97346435c816005207"
  }
  index: 7
  text: "You are as generous as you are wise, dear leader."
  branches {
    responseText: ""
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isSable"
}
nodes {
  idRef {
    id: "5563bf79346435c816005202"
  }
  index: 8
  text: "{{GM}}He sighs in disappointment.{{/GM}}\n\nThis has not been a problem with any of my employers in the past, but I will bow to your wishes. I\342\200\231ll need to rely on the imperfect instrument of my own memory instead."
  branches {
    responseText: ""
    nextNodeIndex: 9
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isSable"
}
nodes {
  idRef {
    id: "5563bf7e346435c816005205"
  }
  index: 9
  text: "If I may make a suggestion, you might consider keeping a journal of your own. With the exciting life you lead, you\342\200\231ll doubtless have ample material for some fascinating memoirs."
  branches {
    responseText: "I\342\200\231m way ahead of you, but I don\342\200\231t bring it while I\342\200\231m on mission."
    nextNodeIndex: 10
  }
  branches {
    responseText: "That\342\200\231s a good idea, I\342\200\231ll consider starting one."
    nextNodeIndex: 11
  }
  branches {
    responseText: "The last thing I want is for anyone to know what happens on this job."
    nextNodeIndex: 12
  }
  branches {
    responseText: "I\342\200\231m a $(s.man) of action, not of words."
    nextNodeIndex: 13
  }
  branches {
    responseText: "{{CC}}Flirt{{/CC}} I might jot down some notes about this tall, dark, and handsome man I\342\200\231ve recently met."
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "5505a99b346435a418004d07"
            }
            args {
              string_value: "Global_Romance_SableLoveTalks"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "5505a99b346435a418004d07"
            }
            args {
              string_value: "Global_Romance_CanFlirtWithSable"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 14
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{CC}}Flirt{{/CC}} I get the feeling your journal may have a non-professional interest in yours truly."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "5505a99b346435a418004d07"
            }
            args {
              string_value: "Global_Romance_CanFlirtWithSable"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "5505a99b346435a418004d07"
            }
            args {
              string_value: "Global_Romance_SableLoveTalks"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 15
    hideIfUnavailable: true
  }
  branches {
    responseText: "You\342\200\231ll have a prominent place in whatever story I end up writing."
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "5505a99b346435a418004d07"
            }
            args {
              string_value: "Global_Romance_SableLoveTalks"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 16
    hideIfUnavailable: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isSable"
}
nodes {
  idRef {
    id: "5563c182346435c81600528b"
  }
  index: 10
  text: "That\342\200\231s very practical of you, though I imagine it\342\200\231s harder to accurately capture your feelings in the moment after the entire day has passed. Still, I can understand your precaution."
  branches {
    responseText: ""
    nextNodeIndex: 17
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isSable"
  actions {
    ops {
      functionName: "Apply Attribute Status Effect to Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isSable"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 0
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "String_GainedFavor"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BuffDebuffType"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "Global_Approval_Sable"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
}
nodes {
  idRef {
    id: "5563c18b346435c81600528f"
  }
  index: 11
  text: "Wonderful! I hope the experience is as enlightening for you as it has been for me."
  branches {
    responseText: ""
    nextNodeIndex: 17
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isSable"
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "Global_Approval_Sable"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Apply Attribute Status Effect to Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isSable"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 0
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "String_GainedFavor"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BuffDebuffType"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
}
nodes {
  idRef {
    id: "5563c191346435c816005293"
  }
  index: 12
  text: "Would you deprive the world of your unique knowledge and experiences? What a shame! Information should never go to waste."
  branches {
    responseText: ""
    nextNodeIndex: 17
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isSable"
  actions {
    ops {
      functionName: "Apply Attribute Status Effect to Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isSable"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 0
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "String_LostFavor"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BuffDebuffType"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "Global_Approval_Sable"
          }
        }
      }
      args {
        int_value: -1
      }
    }
  }
}
nodes {
  idRef {
    id: "5563bfe7346435c816005213"
  }
  index: 13
  text: "I suppose that is true. I shouldn\342\200\231t presume to project my own needs onto you; we are two different people, after all."
  branches {
    responseText: ""
    nextNodeIndex: 17
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isSable"
}
nodes {
  idRef {
    id: "5563c0df346435c816005284"
  }
  index: 14
  text: "How intriguing! I might be interested in reading those notes sometime. Perhaps we can find a more quiet, secluded location to exchange information."
  branches {
    responseText: ""
    nextNodeIndex: 17
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isSable"
  actions {
    ops {
      functionName: "Apply Attribute Status Effect to Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isSable"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 0
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "String_GainedFavor"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BuffDebuffType"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "Global_Approval_Sable"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "Global_Romance_SableFlirtCount"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
}
nodes {
  idRef {
    id: "5563c0c2346435c816005282"
  }
  index: 15
  text: "Oh ho ho! I\342\200\231ll never tell. But I will say that you are a fantastic guesser. Perhaps later we can explore your theories in greater depth."
  branches {
    responseText: ""
    nextNodeIndex: 17
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isSable"
  actions {
    ops {
      functionName: "Apply Attribute Status Effect to Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isSable"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 0
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "String_GainedFavor"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BuffDebuffType"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "Global_Approval_Sable"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "Global_Romance_SableFlirtCount"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
}
nodes {
  idRef {
    id: "5563c050346435c816005215"
  }
  index: 16
  text: "How sweet of you to say! I assure you the sentiment is entirely mutual."
  branches {
    responseText: ""
    nextNodeIndex: 17
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isSable"
  actions {
    ops {
      functionName: "Apply Attribute Status Effect to Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isSable"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 0
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "String_GainedFavor"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BuffDebuffType"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "Global_Approval_Sable"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
}
nodes {
  idRef {
    id: "5563c092346435c816005280"
  }
  index: 17
  text: "{{GM}}Sable pockets the notebook.{{/GM}}\n\nI\342\200\231ll take care of this later. After you, $(l.name)!"
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isSable"
}
roots {
  nextNodeIndex: 0
}

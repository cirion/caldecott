idRef {
  id: "55eefc20643431cc032651ea"
}
ui_name: "cc_a2_persi_s3-07Ghost"
nodes {
  idRef {
    id: "55eefc70643431cc03265201"
  }
  index: 0
  text: "Whooooooo are youuuuuu?"
  branches {
    responseText: "I am $(s.name)."
    nextNodeIndex: 1
    idRef {
      id: "55eefc20643431cc032651ea:55eefc7a643431cc03265203"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I am a friend."
    nextNodeIndex: 1
    idRef {
      id: "55eefc20643431cc032651ea:55eefc7a643431cc03265205"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I\342\200\231m getting real tired of this shiiiiiiiiiit."
    nextNodeIndex: 1
    idRef {
      id: "55eefc20643431cc032651ea:55eefc7a643431cc03265207"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefc8d643431cc0326520a"
  }
  index: 1
  text: "Youuuuuuu saw the Captain. Our leader will destroy. Our leader is strength."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "55eefc20643431cc032651ea:55eefc9d643431cc03265211"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefc9e643431cc03265214"
  }
  index: 2
  text: "Yossith will tear this ship apart. It will not help. We must remain here, until the ennnnnnnnnd."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "55eefc20643431cc032651ea:55eefca0643431cc03265216"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefca3643431cc03265219"
  }
  index: 3
  text: ""
  branches {
    responseText: "Who are you?"
    nextNodeIndex: 4
    onlyOnce: true
    idRef {
      id: "55eefc20643431cc032651ea:55eefcba643431cc0326522c"
    }
  }
  branches {
    responseText: "What happened here?"
    nextNodeIndex: 7
    onlyOnce: true
    idRef {
      id: "55eefc20643431cc032651ea:55eefcce643431cc0326523d"
    }
  }
  branches {
    responseText: "How can I restart the power?"
    nextNodeIndex: 9
    onlyOnce: true
    idRef {
      id: "55eefc20643431cc032651ea:55eefd25643431cc03265262"
    }
  }
  branches {
    responseText: "Who is Elena Proz?"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "cc_a2_persi_s3-ElenaProz"
            }
          }
        }
      }
    }
    nextNodeIndex: 15
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "55eefc20643431cc032651ea:55ef0c12643431cc032655f5"
    }
  }
  branches {
    responseText: "Who is Peter Yossith?"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "cc_a2_persi_s3-IronMirrors"
            }
          }
        }
      }
    }
    nextNodeIndex: 18
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "55eefc20643431cc032651ea:55ef0c6e643431cc0326564f"
    }
    comment: "Have note about Iron"
  }
  branches {
    responseText: "I read the log files. I know that you killed Peter after what he did to Sophie."
    conditions {
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Confront Elena"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 21
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "55eefc20643431cc032651ea:55ef1213643431cc03265e22"
    }
    comment: "Learned the truth"
  }
  branches {
    responseText: "I need to leave."
    nextNodeIndex: -1
    idRef {
      id: "55eefc20643431cc032651ea:55f4ed643464353027003bb4"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Empty root"
}
nodes {
  idRef {
    id: "55eefcc3643431cc0326522f"
  }
  index: 4
  text: "I ammmmmmm\342\200\246 I ammmmmmm\342\200\246."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "55eefc20643431cc032651ea:55eefcc5643431cc03265231"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefc20643431cc032651ea:55eefcc5643431cc03265233"
  }
  index: 5
  text: "That is all I remember.\n\nA flash, a vivid burst of emotions, calling me.\n\nSo violent. So hungry.\n\nI am. I was. I ammmmmmmmm."
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "55eefc20643431cc032651ea:55eefcca643431cc03265237"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefc20643431cc032651ea:55eefcca643431cc03265239"
  }
  index: 6
  text: "Can you help? Can you teach me who I was, back when I was me?\n\nPerhaps then I will be able to leave."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "55eefc20643431cc032651ea:55eefccc643431cc0326523b"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefc20643431cc032651ea:55eefcce643431cc0326523f"
  }
  index: 7
  text: "Alllllllll of existence. Birth. Growth. Death.\n\nBut\342\200\246 it was all wrong. The wrong order.\n\nIt wasn\342\200\231t supposed to happen like this!"
  branches {
    responseText: ""
    nextNodeIndex: 8
    idRef {
      id: "55eefc20643431cc032651ea:55eefcd0643431cc03265241"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefc20643431cc032651ea:55eefcd0643431cc03265243"
  }
  index: 8
  text: "Confused. I heard it, I saw it, I tasted it, I smelled it. But I did not understand it.\n\nAnd now\342\200\246...\n\nI cannot remember. "
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "55eefc20643431cc032651ea:55eefcd2643431cc03265245"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefc20643431cc032651ea:55eefd25643431cc03265264"
  }
  index: 9
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "5505a99b346435a418004d07"
            }
            args {
              string_value: "cc_a2_persi_s2-DestroyedShip"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 10
    idRef {
      id: "55eefc20643431cc032651ea:55eefd25643431cc03265266"
    }
    comment: "Reactive split: You sank my battleship!"
  }
  branches {
    responseText: ""
    nextNodeIndex: 11
    idRef {
      id: "55eefc20643431cc032651ea:55eefda9643431cc032652bf"
    }
    comment: "Fallback: You did not sink the ship"
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefc20643431cc032651ea:55eefd25643431cc03265268"
  }
  index: 10
  text: "The ship\342\200\246. you destroyed it, did you not? Such violence.\n\nSo many died.\n\nTheir bodies, sinking into the water, pulled beneath the waves, some with a last flash of consciousness as they surrendered their souls, here in the deep\342\200\246\342\200\246..."
  branches {
    responseText: ""
    nextNodeIndex: 12
    idRef {
      id: "55eefc20643431cc032651ea:55eefd25643431cc0326526a"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefdb5643431cc032652c2"
  }
  index: 11
  text: "So much searching\342\200\246 I can feel them now, those who hunt you, those who have reclaimed the ship. All those bright eager hungry jealous souls, casting their thoughts down below the water, sending their hate here\342\200\246\342\200\246..."
  branches {
    responseText: ""
    nextNodeIndex: 12
    idRef {
      id: "55eefc20643431cc032651ea:55eefdcc643431cc032652c4"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefdce643431cc032652c7"
  }
  index: 12
  text: "We threeeeeeeee, we miserable trio, we are the sub, the sub is us. We may tear it apart. We may release it. "
  branches {
    responseText: ""
    nextNodeIndex: 13
    idRef {
      id: "55eefc20643431cc032651ea:55eefdec643431cc032652f5"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefdef643431cc032652f8"
  }
  index: 13
  text: "The chip-ghost. You must find the record written in silicon, the soul of cyber, the memory in metal.\n\nFind the answers. Explain it to usssssssssss. Then we may know.\n\nThen we may leave."
  branches {
    responseText: ""
    nextNodeIndex: 14
    idRef {
      id: "55eefc20643431cc032651ea:55eefe0a643431cc032652fa"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefe0d643431cc032652fd"
  }
  index: 14
  text: "Uh\342\200\246 maybe she\342\200\231s talkin\342\200\231 about the terminal? Like, electronic records or somethin\342\200\231? That\342\200\231s my only guess. We should check it out."
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "55e131da346435e0140016ab"
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "55f4eda63464353027003c63"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "55ef0c1b643431cc032655f8"
  }
  index: 15
  text: "Elena\342\200\246 Elena is me. Or, I chose to become Elena. Or, Elena turned into meeeeeeeee."
  branches {
    responseText: ""
    nextNodeIndex: 16
    idRef {
      id: "55eefc20643431cc032651ea:55ef0c4e643431cc032655fa"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Actor Display Name"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "55e9bfda643431dbf396104d"
              }
            }
          }
          args {
          }
        }
      }
      args {
        string_value: "Spirit of Elena"
      }
    }
  }
}
nodes {
  idRef {
    id: "55ef0c54643431cc032655fd"
  }
  index: 16
  text: "An engineer. Fixing, righting, tightening, screwing. Keep the vessel afloat, keep it moving, never stop, don\342\200\231t stop."
  branches {
    responseText: ""
    nextNodeIndex: 17
    idRef {
      id: "55eefc20643431cc032651ea:55ef0c5d643431cc032655ff"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55ef0c5f643431cc03265602"
  }
  index: 17
  text: "An object? A prize? I can almost remember. I cannot remember."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "55eefc20643431cc032651ea:55ef0c60643431cc03265604"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55ef0c79643431cc03265652"
  }
  index: 18
  text: "The captain. My captain. Our captain. Our leader. Our savior. Our destroyer."
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "55eefc20643431cc032651ea:55ef0c80643431cc03265654"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Actor Display Name"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "55e9bfd8643431dbf396104c"
              }
            }
          }
          args {
          }
        }
      }
      args {
        string_value: "Spirit of Peter"
      }
    }
  }
}
nodes {
  idRef {
    id: "55eefc20643431cc032651ea:55ef0c82643431cc03265656"
  }
  index: 19
  text: "So quiet. So careful. So generous. Always watching. Planning. Preparing to provide. And then\342\200\246 but no. I can\342\200\231t think of that. I must not."
  branches {
    responseText: ""
    nextNodeIndex: 20
    idRef {
      id: "55eefc20643431cc032651ea:55ef0c82643431cc03265658"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefc20643431cc032651ea:55ef0c8a643431cc0326565c"
  }
  index: 20
  text: "{{GM}}The spirit averts her face and flings out an ethereal arm, pointing away from the room.{{/GM}}\n\nThere. Find that. Seek answers. I feel fear. I do not want to live it again. I have to live it again, or I will never live again."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "55eefc20643431cc032651ea:55ef0c8a643431cc0326565e"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "55f5b6863464355413004f1b"
          }
        }
      }
    }
  }
  comment: "Spawn Sophie PDA pickup"
}
nodes {
  idRef {
    id: "55ef1234643431cc03265e25"
  }
  index: 21
  text: "I did?\n\nI\342\200\246. did.\n\nYes. Yes, that explains so much."
  branches {
    responseText: ""
    nextNodeIndex: 22
    idRef {
      id: "55eefc20643431cc032651ea:55ef1236643431cc03265e27"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefc20643431cc032651ea:55ef1252643431cc03265e29"
  }
  index: 22
  text: "I\342\200\231ve felt so ravenous. Always devouring, but never full. Eating away at the emptiness inside myself, but each bite only makes me more hungryyyyyyyyy\342\200\246.."
  branches {
    responseText: ""
    nextNodeIndex: 23
    idRef {
      id: "55eefc20643431cc032651ea:55ef1252643431cc03265e2b"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefc20643431cc032651ea:55ef1256643431cc03265e2f"
  }
  index: 23
  text: "And what do you think of my story? Do I horrify you? Frighten you? Or do you feel pity?"
  branches {
    responseText: "Yossith broke the taboo. He made you do it."
    nextNodeIndex: 24
    idRef {
      id: "55eefc20643431cc032651ea:55ef1256643431cc03265e31"
    }
  }
  branches {
    responseText: "You shouldn\342\200\231t have been here in the first place."
    nextNodeIndex: 25
    idRef {
      id: "55eefc20643431cc032651ea:55ef1281643431cc03265e38"
    }
  }
  branches {
    responseText: "Yossith did wrong, but that does not excuse your own actions."
    nextNodeIndex: 26
    idRef {
      id: "55eefc20643431cc032651ea:55ef1283643431cc03265e41"
    }
  }
  branches {
    responseText: "You deserved one another. I wish you\342\200\231d both have stayed dead."
    nextNodeIndex: 27
    idRef {
      id: "55eefc20643431cc032651ea:55ef1283643431cc03265e47"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55ef127c643431cc03265e34"
  }
  index: 24
  text: "Peter was always hard. Insistent. But he exploited an existing weakness inside me. If I hadn\342\200\231t been so centered on my own desires, I would have realized what was going on."
  branches {
    responseText: ""
    nextNodeIndex: 28
    idRef {
      id: "55eefc20643431cc032651ea:55ef127f643431cc03265e36"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefc20643431cc032651ea:55ef1281643431cc03265e3a"
  }
  index: 25
  text: "Peter thought so. He never liked seeing the two of us together. Only each of us separately.\n\nWho knows what would have happened if we had stayed away. Would all this have been averted? Or would two different victims have taken our place?"
  branches {
    responseText: ""
    nextNodeIndex: 28
    idRef {
      id: "55eefc20643431cc032651ea:55ef1281643431cc03265e3c"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefc20643431cc032651ea:55ef1283643431cc03265e43"
  }
  index: 26
  text: "Peter\'s actions explain my own. Even if they do not justify them. Just as my actions will explain yours."
  branches {
    responseText: ""
    nextNodeIndex: 28
    idRef {
      id: "55eefc20643431cc032651ea:55ef1283643431cc03265e45"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefc20643431cc032651ea:55ef1283643431cc03265e49"
  }
  index: 27
  text: "I wonder. A voice, crying out, across the chasm, summoning, desperate, claiming, \342\200\234Let this act at least be remembered\342\200\246\342\200\235\n\nBy whom? For what?"
  branches {
    responseText: ""
    nextNodeIndex: 28
    idRef {
      id: "55eefc20643431cc032651ea:55ef1283643431cc03265e4b"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55ef2137643431f50b058f34"
  }
  index: 28
  text: "I remember."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "55f4f0ec3464353027003f7f"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "55eefc55643431cc032651f8"
  }
  index: 29
  text: "Whyyyyyyyy have you returned?\n\nDo you have knowledge for meeeeeeeee?"
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "55eefc20643431cc032651ea:55ef0c03643431cc032655c3"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  nextNodeIndex: 0
  onlyOnce: true
  idRef {
    id: "55eefc20643431cc032651ea:55eefc20643431cc032651ee"
  }
}
roots {
  responseText: ""
  nextNodeIndex: 29
  idRef {
    id: "55eefc20643431cc032651ea:55eefc43643431cc032651f5"
  }
  comment: "Revisiting, can\'t advance."
}

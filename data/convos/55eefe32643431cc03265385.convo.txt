idRef {
  id: "55eefe32643431cc03265385"
}
ui_name: "cc_a2_persi_s3-08Terminal"
nodes {
  idRef {
    id: "55eefe37643431cc0326538d"
  }
  index: 0
  text: ">> CFSS Sisyphus\n>> Property of Shiawase Envirotech, a division of Shiawase CFS\n>> O/S Version 23.1.14\n\n> Safeguards removed. Accepting queries."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "55eefe32643431cc03265385:55eefe63643431cc03265394"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefe65643431cc03265397"
  }
  index: 1
  text: ""
  branches {
    responseText: "What is the current ship status?"
    nextNodeIndex: 2
    onlyOnce: true
    idRef {
      id: "55eefe32643431cc03265385:55eefe68643431cc03265399"
    }
  }
  branches {
    responseText: "What happened here?"
    nextNodeIndex: 4
    onlyOnce: true
    idRef {
      id: "55eefe32643431cc03265385:55eefe6e643431cc0326539f"
    }
  }
  branches {
    responseText: "Who served on board this vessel?"
    nextNodeIndex: 5
    onlyOnce: true
    idRef {
      id: "55eefe32643431cc03265385:55eefee4643431cc032653fa"
    }
  }
  branches {
    responseText: "Search for a specific term."
    nextNodeIndex: 7
    idRef {
      id: "55eefe32643431cc03265385:55eeff39643431cc0326543f"
    }
  }
  branches {
    responseText: "View logs."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "cc_a2_persi_s3-Sophie"
            }
          }
        }
      }
    }
    nextNodeIndex: 12
    hideIfUnavailable: true
    idRef {
      id: "55eefe32643431cc03265385:55ef0d70643431cc032657c1"
    }
  }
  branches {
    responseText: "Access Shiawase data store."
    nextNodeIndex: 36
    idRef {
      id: "55eefe32643431cc03265385:55f4b21d3464353803003a43"
    }
  }
  branches {
    responseText: "Log off."
    nextNodeIndex: -1
    idRef {
      id: "55eefe32643431cc03265385:55ef1055643431cc03265b4f"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Empty root"
}
nodes {
  idRef {
    id: "55eefe32643431cc03265385:55eefe68643431cc0326539b"
  }
  index: 2
  text: "> Hull integrity: 80%\n> Weapon systems: Online\n> Torpedos available: 8\n> Electronic security: Disabled\n> Recording: Offline\n> [Press any key to continue]"
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "55eefe32643431cc03265385:55eefe97643431cc032653a7"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefe99643431cc032653aa"
  }
  index: 3
  text: "> Communications: Offline\n> Engines: Offline\n> Power reserves: 86%\n> Power active: 1%"
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "55eefe32643431cc03265385:55eefe9b643431cc032653ac"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefe32643431cc03265385:55eefe6e643431cc032653a1"
  }
  index: 4
  text: "> Search parameters are too broad. Please restate your query."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "55eefe32643431cc03265385:55eefed1643431cc032653d2"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefef4643431cc032653fd"
  }
  index: 5
  text: "> Fetching most recent manifest, please wait..."
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "55eefe32643431cc03265385:55eefef7643431cc032653ff"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55eefe32643431cc03265385:55eefef8643431cc03265401"
  }
  index: 6
  text: "> Captain: Peter Yossith\n> First officer: **REDACTED**\n> Engineer: Elena Proz\n> **REDACTED**: **REDACTED**\n> **REDACTED**"
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "55eefe32643431cc03265385:55eefef8643431cc03265403"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "cc_a2_persi_s3-Manifest"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "55eeff40643431cc03265442"
  }
  index: 7
  text: "Please enter your query."
  branches {
    responseText: "Elena"
    nextNodeIndex: 8
    idRef {
      id: "55eefe32643431cc03265385:55eeff48643431cc03265444"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Proz"
    nextNodeIndex: 8
    idRef {
      id: "55eefe32643431cc03265385:55eeff74643431cc03265449"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Elena Proz"
    nextNodeIndex: 8
    idRef {
      id: "55eefe32643431cc03265385:55eeff74643431cc0326544b"
    }
  }
  branches {
    responseText: "Peter"
    nextNodeIndex: 9
    idRef {
      id: "55eefe32643431cc03265385:55eeffa9643431cc03265489"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Yossith"
    nextNodeIndex: 9
    idRef {
      id: "55eefe32643431cc03265385:55eeffb9643431cc0326548b"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Peter Yossith"
    nextNodeIndex: 9
    idRef {
      id: "55eefe32643431cc03265385:55eeffba643431cc0326548d"
    }
  }
  branches {
    responseText: "Sophie"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "cc_a2_persi_s3-PDASophieProz"
            }
          }
        }
      }
    }
    nextNodeIndex: 10
    idRef {
      id: "55eefe32643431cc03265385:55ef0cda643431cc03265721"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Sophie Dirks"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "cc_a2_persi_s3-PDASophieProz"
            }
          }
        }
      }
    }
    nextNodeIndex: 10
    idRef {
      id: "55eefe32643431cc03265385:55ef0cf8643431cc03265726"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Dirks"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "cc_a2_persi_s3-PDASophieProz"
            }
          }
        }
      }
    }
    nextNodeIndex: 10
    idRef {
      id: "55eefe32643431cc03265385:55ef0cf8643431cc03265728"
    }
  }
  nodeType: ConversationNodeType_InputKeyboard
}
nodes {
  idRef {
    id: "55eeff80643431cc0326544e"
  }
  index: 8
  text: "> Name: Elena Proz\n> Title: Engineer\n> Date of Birth: 2032/4/11\n> Hometown: Hayward, CFS"
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "55eefe32643431cc03265385:55eeff91643431cc03265455"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "cc_a2_persi_s3-ElenaProz"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "55eeffc4643431cc03265490"
  }
  index: 9
  text: "> Name: Peter Yossith\n> Title: Captain\n> Date of Birth: 2025/8/20\n> Hometown: Daly City, CFS"
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "55eefe32643431cc03265385:55eeffe5643431cc032654be"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "cc_a2_persi_s3-IronMirrors"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "55ef0d04643431cc0326572b"
  }
  index: 10
  text: "> Name: Sophie Dirks\n> Title: First Mate\n> Date of Birth: 2033/1/8\n> Hometown: Hayward, CFS\n>> Note: Additional records available for viewing. Uploading log entries to main memory\342\200\246 "
  branches {
    responseText: ""
    nextNodeIndex: 11
    idRef {
      id: "55eefe32643431cc03265385:55ef0d42643431cc03265761"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "cc_a2_persi_s3-Sophie"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "55ef0d45643431cc03265764"
  }
  index: 11
  text: ">> Done."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "55eefe32643431cc03265385:55ef0d49643431cc03265766"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55ef0d78643431cc032657c4"
  }
  index: 12
  text: "> Please select an entry."
  branches {
    responseText: ""
    nextNodeIndex: 13
    idRef {
      id: "55eefe32643431cc03265385:55ef0d80643431cc032657c6"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55ef0d82643431cc032657c9"
  }
  index: 13
  text: ""
  branches {
    responseText: "Captain\342\200\231s Log: 2056/2/14"
    nextNodeIndex: 14
    onlyOnce: true
    idRef {
      id: "55eefe32643431cc03265385:55ef0d90643431cc03265802"
    }
  }
  branches {
    responseText: "First Mate\342\200\231s Log: 2056/3/17"
    nextNodeIndex: 16
    onlyOnce: true
    idRef {
      id: "55eefe32643431cc03265385:55ef0d9d643431cc0326580f"
    }
  }
  branches {
    responseText: "Engineer\342\200\231s Log: 2056/3/18"
    nextNodeIndex: 19
    onlyOnce: true
    idRef {
      id: "55eefe32643431cc03265385:55ef0e38643431cc03265882"
    }
  }
  branches {
    responseText: "Captain\342\200\231s Log: 2056/3/21"
    nextNodeIndex: 22
    onlyOnce: true
    idRef {
      id: "55eefe32643431cc03265385:55ef0ea8643431cc0326590e"
    }
  }
  branches {
    responseText: "Engineer\342\200\231s Log: 2056/3/21"
    nextNodeIndex: 25
    onlyOnce: true
    idRef {
      id: "55eefe32643431cc03265385:55ef0ed8643431cc0326591f"
    }
  }
  branches {
    responseText: "Engineer\342\200\231s Log: 2056/3/22"
    nextNodeIndex: 30
    onlyOnce: true
    idRef {
      id: "55eefe32643431cc03265385:55ef0f64643431cc032659ef"
    }
  }
  branches {
    responseText: "Automated Ship Report: 2056/3/22"
    nextNodeIndex: 34
    onlyOnce: true
    idRef {
      id: "55eefe32643431cc03265385:55ef1012643431cc03265b43"
    }
  }
  branches {
    responseText: "Go back."
    nextNodeIndex: 35
    idRef {
      id: "55eefe32643431cc03265385:55ef1049643431cc03265b4a"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Empty root"
}
nodes {
  idRef {
    id: "55ef0d93643431cc03265805"
  }
  index: 14
  text: "Picked up the new skeleton crew today. Shiawase\342\200\231s spreading us thinner than ever before, but at least they don\342\200\231t skimp on electronics. The Sisyphus practically runs itself. We just need to push the right buttons at the right time and stay out of each others\342\200\231 way."
  branches {
    responseText: ""
    nextNodeIndex: 15
    idRef {
      id: "55eefe32643431cc03265385:55ef0d94643431cc03265807"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5627db34643431d2d264f5ee"
  }
}
nodes {
  idRef {
    id: "55eefe32643431cc03265385:55ef0d94643431cc03265809"
  }
  index: 15
  text: "I was a bit shocked to find out that Dirks and Proz are sisters. Not sure yet if it was an oversight back at headquarters, or if they have connections back at HQ to pull that kind of assignment. I\342\200\231m not looking forward to spending three months with these siblings."
  branches {
    responseText: ""
    nextNodeIndex: 13
    idRef {
      id: "55eefe32643431cc03265385:55ef0d9c643431cc0326580d"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5627db34643431d2d264f5ee"
  }
}
nodes {
  idRef {
    id: "55ef0da2643431cc03265812"
  }
  index: 16
  text: "We\342\200\231re dead in the water. Well, dead *under* the water. No engines, no communication. Trapped down here. We can recycle oxygen in indefinitely, but the food\342\200\246"
  branches {
    responseText: ""
    nextNodeIndex: 17
    idRef {
      id: "55eefe32643431cc03265385:55ef0da3643431cc03265814"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5627db5b643431d2d264f5f0"
  }
}
nodes {
  idRef {
    id: "55eefe32643431cc03265385:55ef0da3643431cc03265816"
  }
  index: 17
  text: "The rats appeared. Where could they have come from? We\342\200\231ve been underwater for months without a sign. And now that the sub is damaged, they\342\200\231re suddenly all over the place. Underfoot. Constantly multiplying."
  branches {
    responseText: ""
    nextNodeIndex: 18
    idRef {
      id: "55eefe32643431cc03265385:55ef0da7643431cc0326581a"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5627db5b643431d2d264f5f0"
  }
}
nodes {
  idRef {
    id: "55eefe32643431cc03265385:55ef0da7643431cc0326581c"
  }
  index: 18
  text: "I\342\200\231m going to talk to the captain about it again. No matter what precautions we take, the rats always find our food, always eat it. We\342\200\231re out of everything. Not a crumb left anywhere. Maybe he has something stashed away, some emergency store that will help us survive for just a few more days, maybe help will finally come..."
  branches {
    responseText: ""
    nextNodeIndex: 13
    idRef {
      id: "55eefe32643431cc03265385:55ef0dab643431cc0326581e"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5627db5b643431d2d264f5f0"
  }
}
nodes {
  idRef {
    id: "55ef0e3a643431cc03265885"
  }
  index: 19
  text: "Captain Yossith is a genius!\n\nSophie and I were panicking, convinced that the rats would be our destruction, when they were our salvation all along. Neither of us have been able to catch any of them, but Peter set up a trap or something and killed enough to make a feast."
  branches {
    responseText: ""
    nextNodeIndex: 20
    idRef {
      id: "55eefe32643431cc03265385:55ef0e41643431cc03265887"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5627db51643431d2d264f5ef"
  }
}
nodes {
  idRef {
    id: "55eefe32643431cc03265385:55ef0e41643431cc03265889"
  }
  index: 20
  text: "We dined for over an hour on delicious kebabs, drank all that was left of the wine.\n\nHe put his hand on my knee. I didn\342\200\231t complain."
  branches {
    responseText: ""
    nextNodeIndex: 21
    idRef {
      id: "55eefe32643431cc03265385:55ef0e45643431cc0326588d"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5627db51643431d2d264f5ef"
  }
}
nodes {
  idRef {
    id: "55ef0e80643431cc03265890"
  }
  index: 21
  text: "I just wish that Sophie could have joined us. Peter has had her working in the torpedo room ever since yesterday, I haven\342\200\231t even seen her today. He has some kind of plan to get us out of here.\n\nNow that our strength is regained from devouring the rats, we\342\200\231ll be able to make our move. I just hopes that he lets me relieve her soon so she can eat as well, she must be starving by now."
  branches {
    responseText: ""
    nextNodeIndex: 13
    idRef {
      id: "55eefe32643431cc03265385:55ef0e82643431cc03265892"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5627db51643431d2d264f5ef"
  }
}
nodes {
  idRef {
    id: "55ef0ec5643431cc03265911"
  }
  index: 22
  text: "Elena is on to me. After last night I\342\200\231d hoped that she would be content by my side, but she snuck into the torpedo room while I was asleep. Of course, she didn\342\200\231t find her sister."
  branches {
    responseText: ""
    nextNodeIndex: 23
    idRef {
      id: "55eefe32643431cc03265385:55ef0ed1643431cc03265913"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5627db34643431d2d264f5ee"
  }
}
nodes {
  idRef {
    id: "55eefe32643431cc03265385:55ef0ed2643431cc03265915"
  }
  index: 23
  text: "She hasn\342\200\231t pieced everything together yet, but she will. Maybe she already has and isn\342\200\231t prepared to accept it.\n \nWe\342\200\231re going to die. Why rush towards our death? Why should three suffer together? Why not try and enjoy the time we have left, indulge our carnal desires, the lure of all flesh?"
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "55eefe32643431cc03265385:55ef0ed2643431cc03265917"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5627db34643431d2d264f5ee"
  }
}
nodes {
  idRef {
    id: "55eefe32643431cc03265385:55ef0ed6643431cc0326591b"
  }
  index: 24
  text: "We two could live here happily for a month. Longer, if we stretch our bounty. And if we cooperate\342\200\246 if we agree to each sacrifice what we need, when we need to, we could diminish gracefully, becoming less as our lives extend, leaving our bodies behind as we inch towards the afterlife."
  branches {
    responseText: ""
    nextNodeIndex: 13
    idRef {
      id: "55eefe32643431cc03265385:55ef0ed6643431cc0326591d"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5627db34643431d2d264f5ee"
  }
}
nodes {
  idRef {
    id: "55ef0f04643431cc03265924"
  }
  index: 25
  text: "No. No! NO!"
  branches {
    responseText: ""
    nextNodeIndex: 26
    idRef {
      id: "55eefe32643431cc03265385:55ef0f05643431cc03265926"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5627db51643431d2d264f5ef"
  }
}
nodes {
  idRef {
    id: "55eefe32643431cc03265385:55ef0f05643431cc03265928"
  }
  index: 26
  text: "I didn\342\200\231t know, but I should have. We were sisters! I should have FELT something. I should have sensed it. Or at the least, I should have refused to take the first bite until I saw her safe again."
  branches {
    responseText: ""
    nextNodeIndex: 27
    idRef {
      id: "55eefe32643431cc03265385:55ef0f0e643431cc0326592c"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5627db51643431d2d264f5ef"
  }
}
nodes {
  idRef {
    id: "55eefe32643431cc03265385:55ef0f0e643431cc0326592e"
  }
  index: 27
  text: "Peter has gone mad. Or perhaps he was always mad. Perhaps this disaster just gave him the excuse to indulge his sick craving. Or maybe he caused the disaster in the first place. I never learned what caused the explosion, or where the rats came from."
  branches {
    responseText: ""
    nextNodeIndex: 28
    idRef {
      id: "55eefe32643431cc03265385:55ef0f10643431cc03265930"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5627db51643431d2d264f5ef"
  }
}
nodes {
  idRef {
    id: "55eefe32643431cc03265385:55ef0f10643431cc03265932"
  }
  index: 28
  text: "His proposal was untenable. I ran, and locked myself in this room. And I prayed for eternal damnation upon his soul. To any god who would listen, to any spirit, to any being. I will give anything! My life, my mind, my all.\n\nI cannot change my past, so I will make his future the same hell that mine has become."
  branches {
    responseText: ""
    nextNodeIndex: 29
    idRef {
      id: "55eefe32643431cc03265385:55ef0f12643431cc03265934"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5627db51643431d2d264f5ef"
  }
}
nodes {
  idRef {
    id: "55eefe32643431cc03265385:55ef0f12643431cc03265936"
  }
  index: 29
  text: "A month of starving to death is too light a punishment. My vengeance must be eternal. "
  branches {
    responseText: ""
    nextNodeIndex: 13
    idRef {
      id: "55eefe32643431cc03265385:55ef0f15643431cc03265938"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5627db51643431d2d264f5ef"
  }
}
nodes {
  idRef {
    id: "55ef0f6e643431cc032659f2"
  }
  index: 30
  text: "Something answered.\n\nSo much blood.\n\nSuch screams."
  branches {
    responseText: ""
    nextNodeIndex: 31
    idRef {
      id: "55eefe32643431cc03265385:55ef0f6f643431cc032659f4"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5627db51643431d2d264f5ef"
  }
}
nodes {
  idRef {
    id: "55eefe32643431cc03265385:55ef0f6f643431cc032659f6"
  }
  index: 31
  text: "I don\342\200\231t regret it, but\342\200\246\n\nI\342\200\231m so afraid. I promised them everything.\n\nThis vessel is theirs. My body is theirs. Their own private Hell on Earth. And with each passing moment, the slick oiliness of their evil seeps deeper into my soul."
  branches {
    responseText: ""
    nextNodeIndex: 32
    idRef {
      id: "55eefe32643431cc03265385:55ef0f74643431cc032659fa"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5627db51643431d2d264f5ef"
  }
}
nodes {
  idRef {
    id: "55eefe32643431cc03265385:55ef0f74643431cc032659fc"
  }
  index: 32
  text: "His body is still out there. What\342\200\231s left of it.\n\nI\342\200\231m so hungry. He showed me the way. I could keep on living.\n\nJust a taste. It does not matter. Not when he\342\200\231s dead. His final gift."
  branches {
    responseText: ""
    nextNodeIndex: 33
    idRef {
      id: "55eefe32643431cc03265385:55ef0f76643431cc032659fe"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5627db51643431d2d264f5ef"
  }
}
nodes {
  idRef {
    id: "55eefe32643431cc03265385:55ef0f76643431cc03265a00"
  }
  index: 33
  text: "God. God.\n\nWhat has he done to me?\n\nWhat have I become?"
  branches {
    responseText: ""
    nextNodeIndex: 13
    idRef {
      id: "55eefe32643431cc03265385:55ef0f78643431cc03265a02"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5627db51643431d2d264f5ef"
  }
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "55f4efa53464353027003e86"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "55ef1028643431cc03265b46"
  }
  index: 34
  text: "> Gunshot detected. No significant hull damage.\n> Returning to surface.\n> No life signs remain on board. Reverting security settings."
  branches {
    responseText: ""
    nextNodeIndex: 13
    idRef {
      id: "55eefe32643431cc03265385:55ef1044643431cc03265b48"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55ef1052643431cc03265b4d"
  }
  index: 35
  text: "Accepting queries."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "55eefe32643431cc03265385:55ef105b643431cc03265b51"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55f4b24d3464353803003a4e"
  }
  index: 36
  text: "> Filesystem is mounted in write-only mode. Access granted only to authorized Shiawase Matrix personnel."
  branches {
    responseText: "{{CC}}Decking: 1, Cyberdeck{{/CC}} {{GM}}Jack in.{{/GM}}"
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Evaluate If Actor Has Item"
            args {
              call_value {
                functionName: "Specific Actor"
                args {
                  call_value {
                    functionName: "Get Map Item (Player)"
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "HasOrHasNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (Item)"
                args {
                  string_value: "CyberdeckExcalibur"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "OR"
            args {
              call_value {
                functionName: "Evaluate If Actor Has Item"
                args {
                  call_value {
                    functionName: "Specific Actor"
                    args {
                      call_value {
                        functionName: "Get Map Item (Player)"
                        args {
                          int_value: 0
                        }
                      }
                    }
                    args {
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "HasOrHasNot"
                    }
                    args {
                      int_value: 1
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Map Item (Item)"
                    args {
                      string_value: "CyberdeckHighlander"
                    }
                  }
                }
              }
            }
            args {
              call_value {
                functionName: "OR"
                args {
                  call_value {
                    functionName: "Evaluate If Actor Has Item"
                    args {
                      call_value {
                        functionName: "Specific Actor"
                        args {
                          call_value {
                            functionName: "Get Map Item (Player)"
                            args {
                              int_value: 0
                            }
                          }
                        }
                        args {
                        }
                      }
                    }
                    args {
                      call_value {
                        functionName: "Get Preset Value (int)"
                        args {
                          string_value: "HasOrHasNot"
                        }
                        args {
                          int_value: 1
                        }
                      }
                    }
                    args {
                      call_value {
                        functionName: "Get Map Item (Item)"
                        args {
                          string_value: "CyberdeckKraftwerk1"
                        }
                      }
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "OR"
                    args {
                      call_value {
                        functionName: "Evaluate If Actor Has Item"
                        args {
                          call_value {
                            functionName: "Specific Actor"
                            args {
                              call_value {
                                functionName: "Get Map Item (Player)"
                                args {
                                  int_value: 0
                                }
                              }
                            }
                            args {
                            }
                          }
                        }
                        args {
                          call_value {
                            functionName: "Get Preset Value (int)"
                            args {
                              string_value: "HasOrHasNot"
                            }
                            args {
                              int_value: 1
                            }
                          }
                        }
                        args {
                          call_value {
                            functionName: "Get Map Item (Item)"
                            args {
                              string_value: "CyberdeckSlimcase"
                            }
                          }
                        }
                      }
                    }
                    args {
                      call_value {
                        functionName: "OR"
                        args {
                          call_value {
                            functionName: "Evaluate If Actor Has Item"
                            args {
                              call_value {
                                functionName: "Specific Actor"
                                args {
                                  call_value {
                                    functionName: "Get Map Item (Player)"
                                    args {
                                      int_value: 0
                                    }
                                  }
                                }
                                args {
                                }
                              }
                            }
                            args {
                              call_value {
                                functionName: "Get Preset Value (int)"
                                args {
                                  string_value: "HasOrHasNot"
                                }
                                args {
                                  int_value: 1
                                }
                              }
                            }
                            args {
                              call_value {
                                functionName: "Get Map Item (Item)"
                                args {
                                  string_value: "CyberdeckSony"
                                }
                              }
                            }
                          }
                        }
                        args {
                          call_value {
                            functionName: "Evaluate If Actor Has Item"
                            args {
                              call_value {
                                functionName: "Specific Actor"
                                args {
                                  call_value {
                                    functionName: "Triggering Actor"
                                  }
                                }
                                args {
                                }
                              }
                            }
                            args {
                              call_value {
                                functionName: "Get Preset Value (int)"
                                args {
                                  string_value: "HasOrHasNot"
                                }
                                args {
                                  int_value: 1
                                }
                              }
                            }
                            args {
                              call_value {
                                functionName: "Get Map Item (Item)"
                                args {
                                  string_value: "CyberdeckVirtuaX"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Matrix_SelfJackIn"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    idRef {
      id: "55eefe32643431cc03265385:55f4b2783464353803003a50"
    }
  }
  branches {
    responseText: "{{GM}}Have Sable jack in.{{/GM}}"
    conditions {
      ops {
        functionName: "Evaluate Turn Mode in Dimension"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "TurnBasedOrFreeMove"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Evaluate Tag for Actor"
        args {
          call_value {
            functionName: "All Actors on Team"
            args {
              call_value {
                functionName: "Get Preset Value (string)"
                args {
                  string_value: "FactionList"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (SceneDimension)"
                args {
                  string_value: "Default"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SenseTagList)"
            args {
              string_value: "isSable"
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor Is Downed"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isSable"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Matrix_SableJackIn"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    idRef {
      id: "55eefe32643431cc03265385:55f4b2793464353803003a52"
    }
  }
  branches {
    responseText: "Never mind."
    nextNodeIndex: 37
    idRef {
      id: "55eefe32643431cc03265385:55f4b2793464353803003a54"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55f4b2823464353803003a57"
  }
  index: 37
  text: "> Accepting queries."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "55eefe32643431cc03265385:55f4b2863464353803003a59"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  nextNodeIndex: 0
  idRef {
    id: "55eefe32643431cc03265385:55eefe32643431cc03265389"
  }
}

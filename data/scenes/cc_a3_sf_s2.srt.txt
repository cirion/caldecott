triggers {
  name: "Map Setup"
  events {
    ops {
      functionName: "On Map Setup"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "560701413464352425000eb2"
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "551733bb3464352416008740"
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55fe1f463464354c1f00761a"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55f1e7ad643431743dd6124d"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Map Start"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Actor In Passive Mode"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 3
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Actor Run Speed"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isConferenceCharacter"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "RunSpeedMethod"
          }
          args {
            int_value: 3
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55f1e7af643431743dd6124e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Debug"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "560709c83464352425000f4b"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "55fe21253464354c1f007622"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "55fe1fea3464354c1f00761d"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55f1e7b0643431743dd6124f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Transition  Floor 1 to 2"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "560701653464352425000eb4"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Transition"
          }
        }
      }
      args {
        float_value: 0.25
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Transition"
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "Berlin:props"
          }
          args {
            string_value: "ElevatorDown"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Transition"
          }
        }
      }
      args {
        float_value: 4
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Transition"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors Except Some"
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors With Tag"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isCamera"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "551733b6346435241600873e"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "55386b00346435700f004e01"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Transition  Floor 2 to 1"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "551733b6346435241600873e"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Transition"
          }
        }
      }
      args {
        float_value: 0.25
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Transition"
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "Berlin:props"
          }
          args {
            string_value: "ElevatorDown"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Transition"
          }
        }
      }
      args {
        float_value: 4
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Transition"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors Except Some"
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors With Tag"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isCamera"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5516f28c34643524160084d6"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "553bc431346435380f001e76"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Transition  Floor 2 to 3"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "551733bb3464352416008740"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Transition"
          }
        }
      }
      args {
        float_value: 0.25
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Transition"
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "Berlin:props"
          }
          args {
            string_value: "ElevatorDown"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Transition"
          }
        }
      }
      args {
        float_value: 4
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Transition"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors Except Some"
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors With Tag"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isCamera"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5517420e34643524160089d3"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "553d480d346435b81d003edd"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Transition  Floor 3 to 2"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5517420e34643524160089d3"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Transition"
          }
        }
      }
      args {
        float_value: 0.25
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Transition"
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "Berlin:props"
          }
          args {
            string_value: "ElevatorDown"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Transition"
          }
        }
      }
      args {
        float_value: 4
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Transition"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors Except Some"
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors With Tag"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isCamera"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "551733bb3464352416008740"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "553d480d346435b81d003ede"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Activate Alarm"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55175dff3464352416008b0b"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "AlarmPanel3rdFloorOff"
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "AlarmLight3rdFloor"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5558a81c346435fc19000296"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Hide Alarms"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "AlarmLight3rdFloor"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5558a867346435fc19000297"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "You Died"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "You Died"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55f1e7b2643431743dd61250"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Rafik Disapproves"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Rafik Disapproves"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "All Actors Within Area"
          args {
            call_value {
              functionName: "Area: Entire Map"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 1
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isRafik"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "Global_Approval_Rafik"
          }
        }
      }
      args {
        int_value: -1
      }
    }
    ops {
      functionName: "Apply Attribute Status Effect to Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isRafik"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 0
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
          }
          args {
            string_value: "String_LostFavor"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BuffDebuffType"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "556b73b53464352813006457"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Rafik Approves"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Rafik Approves"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "All Actors Within Area"
          args {
            call_value {
              functionName: "Area: Entire Map"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 1
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isRafik"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "Global_Approval_Rafik"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Apply Attribute Status Effect to Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isRafik"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 0
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "String_GainedFavor"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BuffDebuffType"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "556b73f33464352813006493"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Persi Disapproves"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Persi Disapproves"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "All Actors Within Area"
          args {
            call_value {
              functionName: "Area: Entire Map"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 1
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isPersi"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "Global_Approval_Persi"
          }
        }
      }
      args {
        int_value: -1
      }
    }
    ops {
      functionName: "Apply Attribute Status Effect to Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isPersi"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 0
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
          }
          args {
            string_value: "String_LostFavor"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BuffDebuffType"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "556b7f003464352813007092"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Persi Approves"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Persi Approves"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "All Actors Within Area"
          args {
            call_value {
              functionName: "Area: Entire Map"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 1
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isPersi"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "Global_Approval_Persi"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Apply Attribute Status Effect to Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isPersi"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 0
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "String_GainedFavor"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BuffDebuffType"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "556b7f003464352813007093"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Sable Disapproves"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Sable Disapproves"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "All Actors Within Area"
          args {
            call_value {
              functionName: "Area: Entire Map"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 1
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isSable"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "Global_Approval_Sable"
          }
        }
      }
      args {
        int_value: -1
      }
    }
    ops {
      functionName: "Apply Attribute Status Effect to Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isSable"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 0
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
          }
          args {
            string_value: "String_LostFavor"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BuffDebuffType"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "556d3375346435801400bdc2"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Sable Approves"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Sable Approves"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "All Actors Within Area"
          args {
            call_value {
              functionName: "Area: Entire Map"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 1
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isSable"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "Global_Approval_Sable"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Apply Attribute Status Effect to Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isSable"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 0
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "String_GainedFavor"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BuffDebuffType"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "556d3375346435801400bdc3"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Dorbi Disapproves"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Dorbi Disapproves"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "All Actors Within Area"
          args {
            call_value {
              functionName: "Area: Entire Map"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 1
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isDorbi"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "Global_Approval_Dorbi"
          }
        }
      }
      args {
        int_value: -1
      }
    }
    ops {
      functionName: "Apply Attribute Status Effect to Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isDorbi"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 0
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
          }
          args {
            string_value: "String_LostFavor"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BuffDebuffType"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "556e6adf346435e014006513"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Dorbi Approves"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Dorbi Approves"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "All Actors Within Area"
          args {
            call_value {
              functionName: "Area: Entire Map"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 1
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isDorbi"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "Global_Approval_Dorbi"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Apply Attribute Status Effect to Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isDorbi"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 0
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "String_GainedFavor"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BuffDebuffType"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "556e6adf346435e014006514"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Matrix_Red Alert"
  events {
    ops {
      functionName: "On Dimension Heat Threshold"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Directional Light Color"
      args {
        float_value: 252
      }
      args {
        float_value: 234
      }
      args {
        float_value: 242
      }
      args {
        float_value: 255
      }
      args {
        float_value: -0.5
      }
      args {
        float_value: -1
      }
      args {
        float_value: -0.75
      }
      args {
        float_value: 3
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "55f303f26434318b4eb569b2"
          }
        }
      }
    }
    ops {
      functionName: "Set Ambient Light Color"
      args {
        float_value: 220
      }
      args {
        float_value: 20
      }
      args {
        float_value: 60
      }
      args {
        float_value: 255
      }
      args {
        float_value: 3
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "55f303f26434318b4eb569b2"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55eb71c1346435102d004e6b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix_TeleportInResponseIC"
  events {
    ops {
      functionName: "On Dimension Heat Threshold"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "55eb7be4346435102d004e7a"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor to Area Around Actor"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isResponseIC"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        int_value: 3
      }
      args {
        int_value: 6
      }
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isResponseIC"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
    }
    ops {
      functionName: "Play FX on Actor"
      args {
        string_value: "MatrixESPSpawn_quiet"
      }
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isResponseIC"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_MatrixPlayTeleportSound"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55eb799c346435102d004e72"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix_PlayTeleportSound"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_MatrixPlayTeleportSound"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "All Actors With Tag"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isResponseIC"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:props"
          }
          args {
            string_value: "teleportIC"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55eb7b44346435102d004e79"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Matrix_TeleportFollowResponseIC_OFF"
  events {
    ops {
      functionName: "On Actor Teleport"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
    ops {
      functionName: "Actor is a Persona"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Actor is Player Controlled"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor to Area Around Actor"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isResponseIC"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        int_value: 3
      }
      args {
        int_value: 6
      }
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isResponseIC"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
    }
    ops {
      functionName: "Play FX on Actor"
      args {
        string_value: "MatrixESPSpawn_quiet"
      }
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isResponseIC"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_MatrixPlayTeleportSound"
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "55eb7be4346435102d004e7a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Matrix_PC0 Jack In"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Matrix_SelfJackIn"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Force-Use Interactable Object (with Actor)"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55f303f26434318b4eb56928"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55eb6ede346435102d004e67"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Matrix_Sable Jack In"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Matrix_SableJackIn"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Force-Use Interactable Object (with Actor)"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55f303f26434318b4eb56928"
          }
        }
      }
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Prop"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isSable"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "55f303f26434318b4eb56928"
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55eb6f20346435102d004e69"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Matrix Jack Point Real on Turn-Based"
  events {
    ops {
      functionName: "On Turn Mode Enter"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55f303f26434318b4eb56928"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "55fe1fd33464354c1f00761b"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55fe1f463464354c1f00761a"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "55fe1ff13464354c1f00761e"
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55fe20013464354c1f00761f"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Matrix Jack Point Fake on Freemove"
  events {
    ops {
      functionName: "On Freemove Mode Enter"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55f303f26434318b4eb56928"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "55fe1ff13464354c1f00761e"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55fe1f463464354c1f00761a"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "55fe1fd33464354c1f00761b"
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55fe20403464354c1f007620"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Makrix Use Fake Jack Point"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55fe1f463464354c1f00761a"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Manual Turn Mode in Dimension"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Select a decker to jack in."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Trigger: Wait for Rounds"
      args {
        int_value: 2
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Manual Turn Mode in Dimension"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55fe206a3464354c1f007621"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Matrix_CameraTeleport"
  events {
    ops {
      functionName: "On Actor Teleport"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55eb70f4346435102d004e6a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Deckers Dead"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Team Has Cyberdeck"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Evaluate If Actor Has Item"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "cc_a3_sf_s2-TrainProtocols"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Must Have a Decker"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55fe24e33464354c1f007623"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix Take Paydata"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55f303f26434318b4eb5673e"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55f303f26434318b4eb5673e"
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "cc_a3_sf-Paydata"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55fe26943464354c1f00762e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix Take Train Protocols"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55f303f26434318b4eb56880"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55f303f26434318b4eb56880"
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "cc_a3_sf_s2-TrainProtocols"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55fe27b53464354c1f00762f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix Hack Cameras"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55fe19523464352014000f7f"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55fe19523464352014000f7f"
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isCamera"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: ">> REROUTING CAMERA FEEDS..."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 5
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "55fe281f3464354c1f007630"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix Hack Turrets"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55f303f26434318b4eb566d6"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55f303f26434318b4eb566d6"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: ">> UPDATING THREAT ALGORITHM..."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 5
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55fe28723464354c1f007631"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix Toggle"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55f303f26434318b4eb567ae"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Prop"
      args {
        call_value {
          functionName: "Triggering Prop"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isMatrixToggleActive"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Remove Tag from Prop"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isMatrixToggleActive"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55f303f26434318b4eb567ae"
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_MatrixToggle"
          }
        }
      }
      args {
        float_value: 0.25
      }
    }
  }
  isActive: true
  idRef {
    id: "55fe312d3464354c1f00763d"
  }
  elseActions {
    ops {
      functionName: "Add Tag to Prop"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isMatrixToggleActive"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55f303f26434318b4eb567ae"
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_MatrixToggle"
          }
        }
      }
      args {
        float_value: 0.25
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Matrix Update Toggle FX"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_MatrixToggle"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55f303f26434318b4eb567ae"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isMatrixToggleActive"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Prop Visible"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55fe31183464354c1f00763c"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55fe31a43464354c1f00763e"
  }
  elseActions {
    ops {
      functionName: "Set Prop Visible"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55fe31183464354c1f00763c"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Matrix Update South Doors"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_MatrixToggle"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55f303f26434318b4eb567ae"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isMatrixToggleActive"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55f303f36434318b4eb56af4"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "55fe32433464354c1f007645"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55fe2d043464354c1f007639"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "55fe32523464354c1f007646"
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55fe32843464354c1f007649"
  }
  elseActions {
    ops {
      functionName: "Play FX at Point"
      args {
        string_value: "MatrixESPSpawn_quiet"
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "55f303f36434318b4eb56af4"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55f303f36434318b4eb56af4"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "55fe31ef3464354c1f00763f"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55fe2d043464354c1f007639"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "55fe31ef3464354c1f00763f"
              }
            }
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Matrix Update North Doors"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_MatrixToggle"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55f303f26434318b4eb567ae"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isMatrixToggleActive"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55fe2ce63464354c1f007638"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "55fe32553464354c1f007647"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55f303f16434318b4eb565ee"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "55fe325b3464354c1f007648"
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55fe32f93464354c1f00764a"
  }
  elseActions {
    ops {
      functionName: "Play FX at Point"
      args {
        string_value: "MatrixESPSpawn_quiet"
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "55fe2ce63464354c1f007638"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55fe2ce63464354c1f007638"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "55fe31ef3464354c1f00763f"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55f303f16434318b4eb565ee"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "55fe31ef3464354c1f00763f"
              }
            }
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Matrix Play Toggle Sound"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_MatrixToggle"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:decker"
          }
          args {
            string_value: "Matrix_NodeHackSuccess"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55fe34093464354c1f00764b"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Spawn Matrix Squad Entrance"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "55f303f26434318b4eb5666c"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner By Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isMatrixSquadEntrance"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55fe4d453464354c1f007656"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Spawn Matrix Squad Zone 3"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "55f303f26434318b4eb5699b"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner By Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isMatrixZone3Squad"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55fe4d883464354c1f007657"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Spawn Matrix Squad Zone 5"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "55f303f26434318b4eb5693d"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner By Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isMatrixZone5Squad"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55fe4db33464354c1f007658"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Spawn Matrix Squad Zone 2"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "55f303f26434318b4eb56780"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Activate Actor Spawner By Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isMatrixZone2Squad"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "55fe4dcb3464354c1f007659"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55fe4dcb3464354c1f007659"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Overhear Conference"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5606f83e3464352425000e01"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "55ef288e643431f50b059124"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5558b104346435fc190002d4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Patrol"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "55f988d4643431e9bc14860d"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (PatrolRoute)"
          args {
            string_value: "56070a703464352425000f90"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5606f85c3464352425000e02"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Applause"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5606f6b03464352425000de3"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "* Applause *"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5606f6ad3464352425000de1"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "* Applause *"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1.25
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5606f6b53464352425000de5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "* Applause *"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0.5
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5606f6b83464352425000de7"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "* Applause *"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 2
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5606f6bf3464352425000de9"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "* Applause *"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5606f6c23464352425000dea"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "* Applause *"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0.75
      }
    }
  }
  isActive: true
  idRef {
    id: "5606f8933464352425000e03"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Boos"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5606f6b13464352425000de4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Boooo!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5606f6ae3464352425000de2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Agrotech sucks!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
    }
  }
  isActive: true
  idRef {
    id: "5606f9ee3464352425000e04"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Gasps"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5606f6aa3464352425000de0"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "* Gasp! *"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5606f6b73464352425000de6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Oh, my!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 2
      }
    }
  }
  isActive: true
  idRef {
    id: "5606fa5e3464352425000e05"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Start Employee ID Quest_OFF"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Goal"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Find an Employee ID"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Find an Employee ID"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5606fd5e3464352425000e94"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Used Cameron ID_OFF"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "cc_a3_sf_s2-UsedCameronID"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "560701ca3464352425000eb7"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5606fdf83464352425000eaf"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Used Taylor ID_OFF"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "cc_a3_sf_s2-UsedTaylorID"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "560701ca3464352425000eb7"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5606fe033464352425000eb0"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Activate Elevator 1st Floor"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "560701653464352425000eb4"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "560701413464352425000eb2"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Delete Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "560701413464352425000eb2"
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "560701653464352425000eb4"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "560701ca3464352425000eb7"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Learned of Employee IDs_OFF"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Get an ID Card for Cameron Ueda"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Take Taylor Minami\'s ID Card"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5607033f3464352425000f1b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Receptionist Greeting"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "560709a63464352425000f49"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "55ef2a34643431f50b0591eb"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "55f988d4643431e9bc14860d"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "560709bb3464352425000f4a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Try to Take Blank ID"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "56070c2d3464352425000f93"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor is Inside Region"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "55f988d4643431e9bc14860d"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "AreOrAreNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "56070bbd3464352425000f91"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "55f988d4643431e9bc14860d"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "HEY! What do you think you\'re doing?!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "56070c4a3464352425000f94"
  }
  elseActions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "cc_a3_sf_s2-Blank ID"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Make Cameron ID_OFF"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "cc_a3_sf_s2-Blank ID"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "cc_a3_sf_s2-CameronUedaID"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Get an ID Card for Cameron Ueda"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Find an Employee ID"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "56070d773464352425001009"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Taylor Responds to Phone Call_OFF"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "55f98902643431e9bc14860e"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5607124b3464352425001083"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55f98902643431e9bc14860e"
          }
        }
      }
    }
    ops {
      functionName: "End Current Team Round"
    }
  }
  isActive: false
  idRef {
    id: "560711c43464352425001082"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Taylor at Phone"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5607124b3464352425001083"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "55f98902643431e9bc14860e"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "End Current Team Round"
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_repairing"
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "560712ff3464352425001086"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "560712cb3464352425001085"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Got ID from Taylor_OFF"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55f98902643431e9bc14860e"
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "cc_a3_sf_s2-TaylorMinamiID"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Take Taylor Minami\'s ID Card"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Find an Employee ID"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5607136834643524250010b3"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Overhear Taylor"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "560717b63464352425001144"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "55ef2c5d643431f50b059214"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "55f98902643431e9bc14860e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "560717c93464352425001145"
  }
  elseActions {
  }
  is_oneshot: true
}
regions {
  name: "Camera Middle Floor"
  position {
    x: -135
    y: -84
    width: 62
    height: 68
  }
  enabledAtStart: true
  is_camera_region: true
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "554ea85d346435142100462b"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.6
    y: -0.8
    z: -0.4
  }
  directional_light_color {
    r: 0.23529412
    g: 0.23137255
    b: 0.3882353
    a: 1
  }
  ambient_light_color {
    r: 0.14117648
    g: 0.21176471
    b: 0.28235295
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Camera Ground Floor"
  position {
    x: -34
    y: -63
    width: 73
    height: 60
  }
  enabledAtStart: true
  is_camera_region: true
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "554ea878346435142100462c"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.48235294
    g: 0.41960785
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.17647059
    g: 0.19607843
    b: 0.36470589
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Camera Top Floor"
  position {
    x: -253
    y: -91
    width: 74
    height: 76
  }
  enabledAtStart: true
  is_camera_region: true
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "554ea88c346435142100462d"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.9
    y: -0.75
    z: -0.75
  }
  directional_light_color {
    r: 0.23529412
    g: 0.23137255
    b: 0.3882353
    a: 1
  }
  ambient_light_color {
    r: 0.14117648
    g: 0.23137255
    b: 0.28235295
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Zone5N"
  position {
    x: -322
    y: -71
    width: -1
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55f303f16434318b4eb565c6"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: true
  linked_teleporter_region: "55f303f26434318b4eb56856"
  teleport_facing: 6
  teleport_sound_fx: "Matrix_TeleportDoor"
  teleport_sound_volume: 1
  teleport_source_fx: ""
  teleport_destination_fx: "HongKong:matrixTeleport"
  teleport_pc_only: true
  teleport_fade_time: 0
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Zone2E"
  position {
    x: -305
    y: -23
    width: -2
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55f303f26434318b4eb56624"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: true
  linked_teleporter_region: "55f303f26434318b4eb566b1"
  teleport_facing: 0
  teleport_sound_fx: "Matrix_TeleportDoor"
  teleport_sound_volume: 1
  teleport_source_fx: ""
  teleport_destination_fx: "HongKong:matrixTeleport"
  teleport_pc_only: true
  teleport_fade_time: 0
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Matrix_Zone1"
  position {
    x: -333
    y: -17
    width: -18
    height: -28
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: true
  is_vfx_fill_region: false
  idRef {
    id: "55f303f26434318b4eb5666c"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: "Seattle-Set8-MatrixLoop"
  default_music: "Seattle-Set8-MatrixLoop"
  loop_combat_music: true
  loop_default_music: true
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Zone3S"
  position {
    x: -329
    y: -57
    width: -1
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55f303f26434318b4eb5667c"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: true
  linked_teleporter_region: "55f303f26434318b4eb56759"
  teleport_facing: 2
  teleport_sound_fx: "Matrix_TeleportDoor"
  teleport_sound_volume: 1
  teleport_source_fx: ""
  teleport_destination_fx: "HongKong:matrixTeleport"
  teleport_pc_only: true
  teleport_fade_time: 0
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Zone1W"
  position {
    x: -343
    y: -44
    width: -2
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55f303f26434318b4eb566b1"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: true
  linked_teleporter_region: "55f303f26434318b4eb56624"
  teleport_facing: 4
  teleport_sound_fx: "Matrix_TeleportDoor"
  teleport_sound_volume: 1
  teleport_source_fx: ""
  teleport_destination_fx: "HongKong:matrixTeleport"
  teleport_pc_only: true
  teleport_fade_time: 0
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Zone2N"
  position {
    x: -319
    y: -40
    width: -1
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55f303f26434318b4eb56759"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: true
  linked_teleporter_region: "55f303f26434318b4eb5667c"
  teleport_facing: 6
  teleport_sound_fx: "Matrix_TeleportDoor"
  teleport_sound_volume: 1
  teleport_source_fx: ""
  teleport_destination_fx: "HongKong:matrixTeleport"
  teleport_pc_only: true
  teleport_fade_time: 0
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Matrix_Zone2"
  position {
    x: -290
    y: -18
    width: -33
    height: -43
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: true
  is_vfx_fill_region: false
  idRef {
    id: "55f303f26434318b4eb56780"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: "Seattle-Set8-MatrixLoop"
  default_music: "Seattle-Set8-MatrixLoop"
  loop_combat_music: true
  loop_default_music: true
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Zone2S"
  position {
    x: -292
    y: -40
    width: -1
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55f303f26434318b4eb56856"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: true
  linked_teleporter_region: "55f303f16434318b4eb565c6"
  teleport_facing: 2
  teleport_sound_fx: "Matrix_TeleportDoor"
  teleport_sound_volume: 1
  teleport_source_fx: ""
  teleport_destination_fx: "HongKong:matrixTeleport"
  teleport_pc_only: true
  teleport_fade_time: 0
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Matrix_Zone5"
  position {
    x: -324
    y: -77
    width: 35
    height: 14
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: true
  is_vfx_fill_region: false
  idRef {
    id: "55f303f26434318b4eb5693d"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: "Seattle-Set8-MatrixLoop"
  default_music: "Seattle-Set8-MatrixLoop"
  loop_combat_music: true
  loop_default_music: true
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Matrix_Zone3"
  position {
    x: -328
    y: -52
    width: -33
    height: -24
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: true
  is_vfx_fill_region: false
  idRef {
    id: "55f303f26434318b4eb5699b"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: "Seattle-Set8-MatrixLoop"
  default_music: "Seattle-Set8-MatrixLoop"
  loop_combat_music: true
  loop_default_music: true
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Camera_MatrixZone"
  position {
    x: -287
    y: -17
    width: -78
    height: -60
  }
  enabledAtStart: true
  is_camera_region: true
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55f303f26434318b4eb569b2"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.031372551
    g: 0.72941178
    b: 0.086274512
    a: 1
  }
  ambient_light_color {
    r: 0
    g: 0.29019609
    b: 0.047058824
    a: 1
  }
  ambience_template: ""
  combat_music: "HongKong-Combat-Matrix2"
  default_music: "HongKong-Stealth-Matrix1"
  loop_combat_music: true
  loop_default_music: true
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Jack Point Region"
  position {
    x: -212
    y: -44
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55fe1fd33464354c1f00761b"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Jack Point Holding Region"
  position {
    x: -283
    y: -43
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55fe1ff13464354c1f00761e"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Matrix Door Holding Region"
  position {
    x: -284
    y: -35
    width: 2
    height: 5
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55fe31ef3464354c1f00763f"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Matrix Wall South 1"
  position {
    x: -298
    y: -41
    width: 1
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55fe32433464354c1f007645"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Matrix Wall South 2"
  position {
    x: -298
    y: -39
    width: 1
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55fe32523464354c1f007646"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Matrix Wall North 1"
  position {
    x: -315
    y: -41
    width: 1
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55fe32553464354c1f007647"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Matrix Wall North 2"
  position {
    x: -315
    y: -39
    width: 1
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55fe325b3464354c1f007648"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Trigger Conference"
  position {
    x: -10
    y: -51
    width: 1
    height: 17
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5606f83e3464352425000e01"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Trigger Receptionist Greeting"
  position {
    x: 22
    y: -36
    width: 1
    height: 26
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "560709a63464352425000f49"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Receptionist Near Desk"
  position {
    x: 14
    y: -33
    width: 11
    height: 13
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "56070bbd3464352425000f91"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Taylor Minami Mark"
  position {
    x: 5
    y: -40
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5607124b3464352425001083"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Overhear Taylor"
  position {
    x: 3
    y: -44
    width: 1
    height: 9
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "560717b63464352425001144"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
patrolRoutes {
  name: "Receptionist Route"
  pathType: 1
  nodes {
    position {
      x: 19
      z: -26
    }
    index: 0
    rail_node_pause_time: 10
    rail_node_flip_180_rotation: false
    rail_node_facing: -1
    rail_draw_segment: true
    rail_draw_node: true
  }
  nodes {
    position {
      x: 15
      z: -26
    }
    index: 1
    rail_node_pause_time: 0
    rail_node_flip_180_rotation: false
    rail_node_facing: -1
    rail_draw_segment: true
    rail_draw_node: true
  }
  nodes {
    position {
      x: 15
      z: -33
    }
    index: 2
    rail_node_pause_time: 0
    rail_node_flip_180_rotation: false
    rail_node_facing: -1
    rail_draw_segment: true
    rail_draw_node: true
  }
  nodes {
    position {
      x: 9
      z: -34
    }
    index: 3
    rail_node_pause_time: 0
    rail_node_flip_180_rotation: false
    rail_node_facing: -1
    rail_draw_segment: true
    rail_draw_node: true
  }
  nodes {
    position {
      x: 9
      z: -18
    }
    index: 4
    rail_node_pause_time: 0
    rail_node_flip_180_rotation: false
    rail_node_facing: -1
    rail_draw_segment: true
    rail_draw_node: true
  }
  nodes {
    position {
      x: 4
      z: -18
    }
    index: 5
    rail_node_pause_time: 0
    rail_node_flip_180_rotation: false
    rail_node_facing: -1
    rail_draw_segment: true
    rail_draw_node: true
  }
  can_move_beyond_node: false
  is_rail: false
  rail_speed: 1
  rail_rotation_time: 4
  idRef {
    id: "56070a703464352425000f90"
  }
  rail_draw_segments: true
  rail_draw_nodes: true
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 30
    y: 0
    z: -26
  }
  orientation: ORIENTATION_N
  displayName: "PC0"
  idRef {
    id: "5517312b3464352416008717"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 0
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 30
    y: 0
    z: -25
  }
  orientation: ORIENTATION_N
  displayName: "PC1"
  idRef {
    id: "551731383464352416008718"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 1
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 31
    y: 0
    z: -26
  }
  orientation: ORIENTATION_N
  displayName: "PC2"
  idRef {
    id: "5517313a3464352416008719"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 2
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 31
    y: 0
    z: -25
  }
  orientation: ORIENTATION_N
  displayName: "PC3"
  idRef {
    id: "5517313b346435241600871a"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 3
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -22
    y: 0
    z: -46
  }
  orientation: ORIENTATION_S
  GeneralTags: "isConferenceCharacter"
  displayName: "Ava"
  idRef {
    id: "5558b104346435fc190002d4"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Story/LynneTelestrian"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Ava Montalvo"
    GeneralTags: "isConferenceCharacter"
    pc_spawn_number: -1
    portrait {
      filename: "pc_elffemale_06b_platinum"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -174
    y: 0
    z: -58
  }
  orientation: ORIENTATION_S
  GeneralTags: "isTurret"
  displayName: "Turret (for duping)"
  idRef {
    id: "55ea3399643431cc03265084"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/CorpTurret"
    character_sheet_id: "Turret_Lv1"
    equipment_sheet_id: "Turret_Lv1_Burst_Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 2
        vision_cone_distance: 18
        vision_cone_angle: 90
        is_fearless: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Turrets"
    char_name: "Turret"
    GeneralTags: "isTurret"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 41
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -174
    y: 0
    z: -59
  }
  orientation: ORIENTATION_S
  GeneralTags: "isCamera"
  displayName: "Security Camera (for duping)"
  idRef {
    id: "55ea33cb643431cc03265085"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/SecurityCam"
    character_sheet_id: "Camera"
    character_mod {
      stats {
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Camera"
    GeneralTags: "isCamera"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    unkillable: true
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
    hide_floaties: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -108
    y: 0
    z: -64
  }
  orientation: ORIENTATION_S
  GeneralTags: "squad1"
  displayName: "Squad 1 Hellhound"
  idRef {
    id: "55ea33ef643431cc03265086"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Creature/CreatureHellhound"
    character_sheet_id: "Creature_Lv1_Hellhound"
    equipment_sheet_id: "Hellhound_Lv1_Powers"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: -1
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Hellhound"
    GeneralTags: "squad1"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 52
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -107
    y: 0
    z: -64
  }
  orientation: ORIENTATION_S
  GeneralTags: "squad1"
  displayName: "Squad 1 Mage"
  idRef {
    id: "55ea3418643431cc03265087"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Tsang Security/HumanFemaleTsangSecurityMage"
    character_sheet_id: "Errant_Lv1_Human_Mage"
    equipment_sheet_id: "Errant_Lv1_Spellcasting"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Mage"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Shiawase Mage"
    GeneralTags: "squad1"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 43
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -106
    y: 0
    z: -64
  }
  orientation: ORIENTATION_S
  GeneralTags: "squad1"
  displayName: "Squad 1 Shotgun"
  idRef {
    id: "55ea345b643431cc03265088"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Tsang Security/HumanFemaleTsangSecurityRigger"
    character_sheet_id: "Errant_Lv1_Ork_Shotgun"
    equipment_sheet_id: "Errant_Lv1_Shotgun"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Shiawase Guard"
    GeneralTags: "squad1"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 41
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -105
    y: 0
    z: -64
  }
  orientation: ORIENTATION_S
  GeneralTags: "squad1"
  displayName: "Squad 1Captain"
  idRef {
    id: "55ea3461643431cc03265089"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Tsang Security/HumanMaleTsangSecurityCaptain"
    character_sheet_id: "Errant_Lv1_Captain"
    equipment_sheet_id: "Errant_Lv1_Captain"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Shiawase Lead Guard"
    GeneralTags: "squad1"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 52
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -170
    y: 0
    z: -55
  }
  orientation: ORIENTATION_S
  GeneralTags: "squad2"
  displayName: "Squad 2 Mage"
  idRef {
    id: "55ea34c5643431cc0326508a"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Tsang Security/ElfMaleTsangSecurityMage"
    character_sheet_id: "Errant_Lv1_Human_Mage"
    equipment_sheet_id: "Errant_Lv1_Spellcasting"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Mage"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Shiawase Mage"
    GeneralTags: "squad2"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 43
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -171
    y: 0
    z: -55
  }
  orientation: ORIENTATION_S
  GeneralTags: "squad2"
  displayName: "Squad 2 Rigger"
  idRef {
    id: "55ea34c8643431cc0326508b"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Tsang Security/HumanFemaleTsangSecurityRigger"
    character_sheet_id: "Errant_Lv1_Rigger"
    equipment_sheet_id: "Errant_Lv1_Rigger_Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_grunt"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Shiawase Rigger"
    GeneralTags: "squad2"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 44
    hiring_cost_override: 1000
    scale_character_sheet: true
    cyberware_head: "(Head) Datajack"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -172
    y: 0
    z: -55
  }
  orientation: ORIENTATION_S
  GeneralTags: "squad2"
  displayName: "Squad 2 SMG"
  idRef {
    id: "55ea34f5643431cc0326508c"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Tsang Security/HumanMaleTsangSecuritySamurai"
    character_sheet_id: "Errant_Lv1_Heavy_Explosive"
    equipment_sheet_id: "Errant_Lv1_Explosive"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Shiawase Guard"
    GeneralTags: "squad2"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 47
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -173
    y: 0
    z: -55
  }
  orientation: ORIENTATION_S
  GeneralTags: "squad2"
  displayName: "Squad 2 SMG 2"
  idRef {
    id: "55ea34fd643431cc0326508d"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Tsang Security/ElfFemaleTsangSecuritySniper"
    character_sheet_id: "Errant_Lv1_Heavy_Explosive"
    equipment_sheet_id: "Errant_Lv1_Explosive"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Shiawase Guard"
    GeneralTags: "squad2"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 47
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -174
    y: 0
    z: -55
  }
  orientation: ORIENTATION_S
  GeneralTags: "squad2"
  displayName: "Squad 2 Sniper"
  idRef {
    id: "55ea350d643431cc0326508e"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Tsang Security/HumanMaleTsangSecuritySamurai"
    character_sheet_id: "Errant_Lv1_Human_Sniper"
    equipment_sheet_id: "Errant_Lv1_Sniper"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Sniper"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Shiawase Sniper"
    GeneralTags: "squad2"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 42
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -45
    y: 0
    z: -44
  }
  orientation: ORIENTATION_S
  GeneralTags: "squad3"
  idRef {
    id: "55f2031a643431743dd612c8"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Triads/TrollFemaleTriad1"
    character_sheet_id: "Thug_Lv1_Melee"
    equipment_sheet_id: "Thug_Lv1_Melee_Gear"
    team_id: "LoneStar"
    char_name: "Triad Thug"
    GeneralTags: "squad3"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    hiring_set_randomizer: "triad_melee"
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -46
    y: 0
    z: -44
  }
  orientation: ORIENTATION_S
  GeneralTags: "squad3"
  idRef {
    id: "55f2031c643431743dd612c9"
  }
  lod: 0
  character_instance {
    prefab_name: "HumanMaleTriad3"
    character_sheet_id: "Errant_Lv1_Captain"
    equipment_sheet_id: "Errant_Lv1_Captain"
    character_mod {
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Triad Captain"
    GeneralTags: "squad3"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -47
    y: 0
    z: -44
  }
  orientation: ORIENTATION_S
  GeneralTags: "squad3"
  idRef {
    id: "55f2034b643431743dd612ca"
  }
  lod: 0
  character_instance {
    prefab_name: "ElfFemaleKnightErrantShaman"
    character_sheet_id: "Errant_Lv1_Elf_Shaman"
    equipment_sheet_id: "Errant_Lv1_Shaman"
    character_mod {
      archetypeName: "gumbo_grunt"
    }
    team_id: "LoneStar"
    char_name: "Knight Errant Conjurer"
    GeneralTags: "squad3"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -48
    y: 0
    z: -44
  }
  orientation: ORIENTATION_S
  GeneralTags: "squad3"
  idRef {
    id: "55f20358643431743dd612cb"
  }
  lod: 0
  character_instance {
    prefab_name: "HumanMaleKnightErrantMage"
    character_sheet_id: "Errant_Lv1_Human_Mage"
    equipment_sheet_id: "Errant_Lv1_Spellcasting"
    character_mod {
      archetypeName: "gumbo_Mage"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Knight Errant Mage"
    GeneralTags: "squad3"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -300
    y: 0
    z: -72
  }
  orientation: ORIENTATION_N
  GeneralTags: "isMatrixZone5Squad"
  displayName: "Zone4RangedIC1"
  idRef {
    id: "55f303f26434318b4eb56616"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Ranged"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv1 Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White Ranged IC"
    GeneralTags: "isMatrixZone5Squad"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -308
    y: 0
    z: -75
  }
  orientation: ORIENTATION_N
  GeneralTags: "isMatrixZone5Squad"
  displayName: "Zone4MeleeIC1"
  idRef {
    id: "55f303f26434318b4eb566a3"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Melee"
    character_sheet_id: "IC_Lv1_White_Melee"
    equipment_sheet_id: "IC White Melee Lv1 Gear"
    character_mod {
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
    }
    team_id: "LoneStar"
    char_name: "White Melee IC"
    GeneralTags: "isMatrixZone5Squad"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -357
    y: 0
    z: -58
  }
  orientation: ORIENTATION_S
  GeneralTags: "Zone3_Blocker2"
  displayName: "Zone3_Blocker2"
  idRef {
    id: "55f303f26434318b4eb5674e"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_BlockerIC
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Blocker"
    character_sheet_id: "IC_Lv1_White_Blocker"
    equipment_sheet_id: "IC White Blocker Lv1 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_G_BlockerIC"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Blocker IC: Rating 1"
    GeneralTags: "Zone3_Blocker2"
    pc_spawn_number: -1
    spawn_type: SpawnType_BlockerIC
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
    blocker_ic_panel_bypass_code: ""
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -345
    y: 0
    z: -74
  }
  orientation: ORIENTATION_E
  GeneralTags: "Zone3_Blocker1"
  displayName: "Zone3_Blocker1"
  idRef {
    id: "55f303f26434318b4eb5689a"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_BlockerIC
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Blocker"
    character_sheet_id: "IC_Lv1_White_Blocker"
    equipment_sheet_id: "IC White Blocker Lv1 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_G_BlockerIC"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Blocker IC: Rating 1"
    GeneralTags: "Zone3_Blocker1"
    pc_spawn_number: -1
    spawn_type: SpawnType_BlockerIC
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
    blocker_ic_panel_difficulty: 1
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -351
    y: 0
    z: -64
  }
  orientation: ORIENTATION_S
  GeneralTags: "isMatrixZone3Squad"
  idRef {
    id: "55f303f26434318b4eb568e7"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Ranged"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv1 Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White Ranged IC"
    GeneralTags: "isMatrixZone3Squad"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -295
    y: 0
    z: -71
  }
  orientation: ORIENTATION_N
  GeneralTags: "Zone5_Blocker1"
  displayName: "Zone5_Blocker1"
  idRef {
    id: "55f303f26434318b4eb568f4"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_BlockerIC
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Blocker"
    character_sheet_id: "IC_Lv1_White_Blocker"
    equipment_sheet_id: "IC White Blocker Lv1 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_G_BlockerIC"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Blocker IC: Rating 1"
    GeneralTags: "Zone5_Blocker1"
    pc_spawn_number: -1
    spawn_type: SpawnType_BlockerIC
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
    blocker_ic_panel_difficulty: 2
    blocker_ic_panel_bypass_code: ""
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -349
    y: 0
    z: -56
  }
  orientation: ORIENTATION_S
  GeneralTags: "isMatrixZone3Squad"
  idRef {
    id: "55f303f26434318b4eb56910"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Melee"
    character_sheet_id: "IC_Lv1_White_Melee"
    equipment_sheet_id: "IC White Melee Lv1 Gear"
    character_mod {
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
    }
    team_id: "LoneStar"
    char_name: "White Melee IC"
    GeneralTags: "isMatrixZone3Squad"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -345
    y: 0
    z: -70
  }
  orientation: ORIENTATION_E
  GeneralTags: "isMatrixZone3Squad"
  idRef {
    id: "55f303f26434318b4eb56973"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Melee"
    character_sheet_id: "IC_Lv1_White_Melee"
    equipment_sheet_id: "IC White Melee Lv1 Gear"
    character_mod {
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
    }
    team_id: "LoneStar"
    char_name: "White Melee IC"
    GeneralTags: "isMatrixZone3Squad"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -308
    y: 0
    z: -66
  }
  orientation: ORIENTATION_N
  GeneralTags: "isMatrixZone5Squad"
  displayName: "Zone4MeleeIC1"
  idRef {
    id: "55f303f26434318b4eb56a29"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Melee"
    character_sheet_id: "IC_Lv1_White_Melee"
    equipment_sheet_id: "IC White Melee Lv1 Gear"
    character_mod {
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
    }
    team_id: "LoneStar"
    char_name: "White Melee IC"
    GeneralTags: "isMatrixZone5Squad"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -300
    y: 0
    z: -69
  }
  orientation: ORIENTATION_N
  GeneralTags: "isMatrixZone5Squad"
  displayName: "Zone4RangedIC1"
  idRef {
    id: "55f303f26434318b4eb56a87"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Ranged"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv1 Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White Ranged IC"
    GeneralTags: "isMatrixZone5Squad"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -343
    y: 0
    z: -64
  }
  orientation: ORIENTATION_S
  GeneralTags: "isMatrixZone3Squad"
  idRef {
    id: "55f303f36434318b4eb56b35"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Ranged"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv1 Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "IC"
    char_name: "White Ranged IC"
    GeneralTags: "isMatrixZone3Squad"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 19
    y: 0
    z: -26
  }
  orientation: ORIENTATION_S
  GeneralTags: "isConferenceCharacter"
  displayName: "Secretary"
  idRef {
    id: "55f988d4643431e9bc14860d"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Wealthy/HumanMaleAutumn"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Receptionist"
    GeneralTags: "isConferenceCharacter"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 0
    y: 0
    z: -45
  }
  orientation: ORIENTATION_E
  GeneralTags: "isConferenceCharacter"
  displayName: "Taylor"
  idRef {
    id: "55f98902643431e9bc14860e"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    prerequisites {
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Find an Employee ID"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    conversationPoint {
      conversationID: "55ef2d2c643431f50b059285"
      turnToFace: true
    }
    interactionIcon: InteractionIcon_Conversation
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Story/HumanFemaleBrotherhoodAcolyte"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Taylor Minami"
    GeneralTags: "isConferenceCharacter"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 0
    y: 0
    z: -43
  }
  orientation: ORIENTATION_W
  GeneralTags: "isConferenceCharacter"
  displayName: "Brett"
  idRef {
    id: "55f9893f643431e9bc148624"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Story/MrJohnson"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Brett Higawa"
    GeneralTags: "isConferenceCharacter"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -46
    y: 0
    z: -45
  }
  orientation: ORIENTATION_S
  displayName: "Nobody"
  idRef {
    id: "55f9896d643431e9bc148626"
  }
  lod: 0
  character_instance {
    prefab_name: "Wealthy/HumanMaleAutumn"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
    }
    team_id: "Civilians"
    char_name: " "
    pc_spawn_number: -1
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -307
    y: 0
    z: -54
  }
  orientation: ORIENTATION_E
  GeneralTags: "Zone5_Blocker1"
  displayName: "Zone2_Blocker1"
  idRef {
    id: "55fe1aa13464352014000f8a"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_BlockerIC
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Blocker"
    character_sheet_id: "IC_Lv1_White_Blocker"
    equipment_sheet_id: "IC White Blocker Lv1 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_G_BlockerIC"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Blocker IC: Rating 1"
    GeneralTags: "Zone5_Blocker1"
    pc_spawn_number: -1
    spawn_type: SpawnType_BlockerIC
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
    blocker_ic_panel_difficulty: 2
    blocker_ic_panel_bypass_code: ""
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -343
    y: 0
    z: -64
  }
  orientation: ORIENTATION_S
  GeneralTags: "isMatrixZone3Squad"
  idRef {
    id: "55fe1c333464352014000f8b"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Ranged"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv1 Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White Ranged IC"
    GeneralTags: "isMatrixZone3Squad"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -361
    y: 0
    z: -48
  }
  orientation: ORIENTATION_S
  GeneralTags: "isResponseIC"
  displayName: "Decker"
  idRef {
    id: "55fe1e633464354c1f007614"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:KnightErrants/ElfMaleKnightErrantRigger"
    character_sheet_id: "Errant_Lv1_Decker"
    equipment_sheet_id: "Errant_Lv1_Decker_Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Decker"
    GeneralTags: "isResponseIC"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 60
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -361
    y: 0
    z: -47
  }
  orientation: ORIENTATION_S
  GeneralTags: "isResponseIC"
  idRef {
    id: "55fe1e983464354c1f007615"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_blackMelee"
    character_sheet_id: "IC_Lv1_Black_Ranged"
    equipment_sheet_id: "IC Black Melee Lv1 Gear"
    character_mod {
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
    }
    team_id: "LoneStar"
    char_name: "Black Melee IC"
    GeneralTags: "isResponseIC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -360
    y: 0
    z: -48
  }
  orientation: ORIENTATION_S
  GeneralTags: "isResponseIC"
  idRef {
    id: "55fe1e9a3464354c1f007616"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_blackRanged"
    character_sheet_id: "IC_Lv1_Black_Ranged"
    equipment_sheet_id: "IC Black Ranged Lv1 Gear"
    character_mod {
      stats {
        morale: 24
        discipline: 24
        awareness: 24
        protect_tether_range: 5
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
    }
    team_id: "LoneStar"
    char_name: "Black Ranged IC"
    GeneralTags: "isResponseIC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -360
    y: 0
    z: -47
  }
  orientation: ORIENTATION_S
  GeneralTags: "isResponseIC"
  idRef {
    id: "55fe1e9c3464354c1f007617"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_blackTank"
    character_sheet_id: "IC_Lv1_Black_Tank"
    equipment_sheet_id: "IC Black Tank Lv1 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_MatrixTank"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Destroyer IC"
    GeneralTags: "isResponseIC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    hiring_type: HiringType_None
    dimension_name: "Matrix"
    karma: 33
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 32
    y: 0
    z: -24
  }
  orientation: ORIENTATION_N
  displayName: "Sable Debug"
  idRef {
    id: "55fe21253464354c1f007622"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/TrollMale"
    character_sheet_id: "Crew_Sable_Lv1"
    equipment_sheet_id: "Crew_Sable_Lv1_Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Player"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Shadowrunners"
    char_name: "Sable"
    GeneralTags: "isSable"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    cyberware_eyes: "(Eyes) Vision Magnification Eyes 1"
    portrait {
      filename: "pc_trollmale_01hk_rigger"
    }
    description_bio: "A most curious troll."
    portrait_code_override: "s3h8c11b4c11t3"
    karma: 73
    hiring_cost_override: 0
    hiring_tag: "Crew: Decker"
    id: "crew_lv1_sable"
    cyberware_head: "(Head) Datajack"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -195
    y: 0
    z: -66
  }
  orientation: ORIENTATION_E
  GeneralTags: "isCamera"
  displayName: "Security Camera (for duping)"
  idRef {
    id: "55fe25e63464354c1f007624"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/SecurityCam"
    character_sheet_id: "Camera"
    character_mod {
      stats {
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Camera"
    GeneralTags: "isCamera"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    unkillable: true
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
    hide_floaties: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -194
    y: 0
    z: -18
  }
  orientation: ORIENTATION_W
  GeneralTags: "isCamera"
  displayName: "Security Camera (for duping)"
  idRef {
    id: "55fe25f43464354c1f007625"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/SecurityCam"
    character_sheet_id: "Camera"
    character_mod {
      stats {
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Camera"
    GeneralTags: "isCamera"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    unkillable: true
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
    hide_floaties: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -247
    y: 0
    z: -83
  }
  orientation: ORIENTATION_S
  GeneralTags: "isCamera"
  displayName: "Security Camera (for duping)"
  idRef {
    id: "55fe26003464354c1f007626"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/SecurityCam"
    character_sheet_id: "Camera"
    character_mod {
      stats {
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Camera"
    GeneralTags: "isCamera"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    unkillable: true
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
    hide_floaties: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -249
    y: 0
    z: -67
  }
  orientation: ORIENTATION_S
  GeneralTags: "isCamera"
  displayName: "Security Camera (for duping)"
  idRef {
    id: "55fe26083464354c1f007627"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/SecurityCam"
    character_sheet_id: "Camera"
    character_mod {
      stats {
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Camera"
    GeneralTags: "isCamera"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    unkillable: true
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
    hide_floaties: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -121
    y: 0
    z: -46
  }
  orientation: ORIENTATION_E
  GeneralTags: "isCamera"
  displayName: "Security Camera (for duping)"
  idRef {
    id: "55fe262d3464354c1f007628"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/SecurityCam"
    character_sheet_id: "Camera"
    character_mod {
      stats {
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Camera"
    GeneralTags: "isCamera"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    unkillable: true
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
    hide_floaties: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -101
    y: 0
    z: -46
  }
  orientation: ORIENTATION_S
  GeneralTags: "isCamera"
  displayName: "Security Camera (for duping)"
  idRef {
    id: "55fe26413464354c1f007629"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/SecurityCam"
    character_sheet_id: "Camera"
    character_mod {
      stats {
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Camera"
    GeneralTags: "isCamera"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    unkillable: true
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
    hide_floaties: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -113
    y: 0
    z: -72
  }
  orientation: ORIENTATION_S
  GeneralTags: "isCamera"
  displayName: "Security Camera (for duping)"
  idRef {
    id: "55fe26483464354c1f00762a"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/SecurityCam"
    character_sheet_id: "Camera"
    character_mod {
      stats {
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Camera"
    GeneralTags: "isCamera"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    unkillable: true
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
    hide_floaties: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -81
    y: 0
    z: -56
  }
  orientation: ORIENTATION_E
  GeneralTags: "isCamera"
  displayName: "Security Camera (for duping)"
  idRef {
    id: "55fe26513464354c1f00762b"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/SecurityCam"
    character_sheet_id: "Camera"
    character_mod {
      stats {
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Camera"
    GeneralTags: "isCamera"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    unkillable: true
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
    hide_floaties: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -10
    y: 0
    z: -27
  }
  orientation: ORIENTATION_E
  GeneralTags: "isCamera"
  displayName: "Security Camera (for duping)"
  idRef {
    id: "55fe265d3464354c1f00762c"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/SecurityCam"
    character_sheet_id: "Camera"
    character_mod {
      stats {
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Camera"
    GeneralTags: "isCamera"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    unkillable: true
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
    hide_floaties: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 6
    y: 0
    z: -30
  }
  orientation: ORIENTATION_S
  GeneralTags: "isCamera"
  displayName: "Security Camera (for duping)"
  idRef {
    id: "55fe266d3464354c1f00762d"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/SecurityCam"
    character_sheet_id: "Camera"
    character_mod {
      stats {
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Camera"
    GeneralTags: "isCamera"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    unkillable: true
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
    hide_floaties: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -344
    y: 0
    z: -35
  }
  orientation: ORIENTATION_E
  GeneralTags: "isMatrixSquadEntrance"
  idRef {
    id: "55fe4d123464354c1f007653"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_whiteLaser"
    character_sheet_id: "IC_Lv1_White_ChargeLaser"
    equipment_sheet_id: "IC White ChargeLaser Lv1 Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Laser"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White Charge IC"
    GeneralTags: "isMatrixSquadEntrance"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -346
    y: 0
    z: -31
  }
  orientation: ORIENTATION_E
  GeneralTags: "isMatrixSquadEntrance"
  idRef {
    id: "55fe4d173464354c1f007654"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Ranged"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv1 Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White Ranged IC"
    GeneralTags: "isMatrixSquadEntrance"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -340
    y: 0
    z: -38
  }
  orientation: ORIENTATION_E
  GeneralTags: "isMatrixSquadEntrance"
  idRef {
    id: "55fe4d1f3464354c1f007655"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Ranged"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv1 Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White Ranged IC"
    GeneralTags: "isMatrixSquadEntrance"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -305
    y: 0
    z: -42
  }
  orientation: ORIENTATION_E
  GeneralTags: "isMatrixZone2Squad"
  idRef {
    id: "55fe4e103464354c1f00765a"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Melee"
    character_sheet_id: "IC_Lv1_White_Melee"
    equipment_sheet_id: "IC White Melee Lv1 Gear"
    character_mod {
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
    }
    team_id: "LoneStar"
    char_name: "White Melee IC"
    GeneralTags: "isMatrixZone2Squad"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -306
    y: 0
    z: -46
  }
  orientation: ORIENTATION_E
  GeneralTags: "isMatrixZone2Squad"
  idRef {
    id: "55fe4e193464354c1f00765b"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_whiteLaser"
    character_sheet_id: "IC_Lv1_White_ChargeLaser"
    equipment_sheet_id: "IC White ChargeLaser Lv1 Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Laser"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White Charge IC"
    GeneralTags: "isMatrixZone2Squad"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -303
    y: 0
    z: -38
  }
  orientation: ORIENTATION_S
  GeneralTags: "isMatrixZone2Squad"
  idRef {
    id: "55fe4e1f3464354c1f00765c"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Ranged"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv1 Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White Ranged IC"
    GeneralTags: "isMatrixZone2Squad"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -311
    y: 0
    z: -38
  }
  orientation: ORIENTATION_N
  GeneralTags: "isMatrixZone2Squad"
  idRef {
    id: "55fe4e213464354c1f00765d"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Ranged"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv1 Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White Ranged IC"
    GeneralTags: "isMatrixZone2Squad"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -19
    y: 0
    z: -56
  }
  orientation: ORIENTATION_E
  GeneralTags: "isConferenceCharacter"
  displayName: "Gasp 1"
  idRef {
    id: "5606f6aa3464352425000de0"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Business/HumanFemaleBusinessWoman"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Civilian"
    GeneralTags: "isConferenceCharacter"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -22
    y: 0
    z: -59
  }
  orientation: ORIENTATION_E
  GeneralTags: "isConferenceCharacter"
  displayName: "Applause 2"
  idRef {
    id: "5606f6ad3464352425000de1"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Businessman/HumanMaleBusinessmanAsian"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Civilian"
    GeneralTags: "isConferenceCharacter"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -21
    y: 0
    z: -53
  }
  orientation: ORIENTATION_E
  GeneralTags: "isConferenceCharacter"
  displayName: "Boo 2"
  idRef {
    id: "5606f6ae3464352425000de2"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Business/HumanMaleBusinessManCoat"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Civilian"
    GeneralTags: "isConferenceCharacter"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -18
    y: 0
    z: -53
  }
  orientation: ORIENTATION_E
  GeneralTags: "isConferenceCharacter"
  displayName: "Applause 1"
  idRef {
    id: "5606f6b03464352425000de3"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Business/HumanMaleBusinessMan"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Civilian"
    GeneralTags: "isConferenceCharacter"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -18
    y: 0
    z: -50
  }
  orientation: ORIENTATION_N
  GeneralTags: "isConferenceCharacter"
  displayName: "Boo 1"
  idRef {
    id: "5606f6b13464352425000de4"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:HKCivilians/HumanFemaleCivilian1"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Civilian"
    GeneralTags: "isConferenceCharacter"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -18
    y: 0
    z: -48
  }
  orientation: ORIENTATION_N
  GeneralTags: "isConferenceCharacter"
  displayName: "Applause 3"
  idRef {
    id: "5606f6b53464352425000de5"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Newscaster/HumanFemaleNewscaster"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Civilian"
    GeneralTags: "isConferenceCharacter"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -17
    y: 0
    z: -43
  }
  orientation: ORIENTATION_N
  GeneralTags: "isConferenceCharacter"
  displayName: "Gasp 2"
  idRef {
    id: "5606f6b73464352425000de6"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Triads/HumanMaleTriad3"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Civilian"
    GeneralTags: "isConferenceCharacter"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -13
    y: 0
    z: -40
  }
  orientation: ORIENTATION_N
  GeneralTags: "isConferenceCharacter"
  displayName: "Applause 4"
  idRef {
    id: "5606f6b83464352425000de7"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Tsang/HumanFemaleTsangMage"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Civilian"
    GeneralTags: "isConferenceCharacter"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -10
    y: 0
    z: -40
  }
  orientation: ORIENTATION_N
  GeneralTags: "isConferenceCharacter"
  idRef {
    id: "5606f6bb3464352425000de8"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Waiters/HumanFemaleWaiter"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Civilian"
    GeneralTags: "isConferenceCharacter"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -20
    y: 0
    z: -38
  }
  orientation: ORIENTATION_W
  GeneralTags: "isConferenceCharacter"
  displayName: "Applause 5"
  idRef {
    id: "5606f6bf3464352425000de9"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Waiters/HumanMaleWaiter"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Civilian"
    GeneralTags: "isConferenceCharacter"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -23
    y: 0
    z: -35
  }
  orientation: ORIENTATION_W
  GeneralTags: "isConferenceCharacter"
  displayName: "Applause 6"
  idRef {
    id: "5606f6c23464352425000dea"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Story/HumanMaleAmsel"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Civilian"
    GeneralTags: "isConferenceCharacter"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -20
    y: 0
    z: -35
  }
  orientation: ORIENTATION_W
  GeneralTags: "isConferenceCharacter"
  idRef {
    id: "5606f6c53464352425000deb"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Story/HumanMaleRhombus"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Civilian"
    GeneralTags: "isConferenceCharacter"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 31
    y: 0
    z: -24
  }
  orientation: ORIENTATION_N
  displayName: "Debug Rafik"
  idRef {
    id: "560709c83464352425000f4b"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/OrkMale"
    character_sheet_id: "Crew_Rafik_Lv1"
    equipment_sheet_id: "Crew_Rafik_Lv1_Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Player"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Shadowrunners"
    char_name: "Rafik"
    GeneralTags: "isRafik"
    GeneralTags: "isCrew"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    portrait {
      filename: "pc_orkmale_04_slick"
    }
    portrait_code_override: "s1h11c8b0c0t0"
    karma: 75
    hiring_cost_override: 0
    hiring_tag: "Crew: Shaman"
    id: "crew_lv1_rafik"
    first_name: "Rafik"
    last_name: "Toth"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "knowAboutJeanMinami"
    typeName: "bool"
  }
}
mapEvents: "Transition"
mapEvents: "Dorbi Approves"
mapEvents: "Dorbi Disapproves"
mapEvents: "Sable Approves"
mapEvents: "Sable Disapproves"
mapEvents: "Rafik Approves"
mapEvents: "Rafik Disapproves"
mapEvents: "Persi Approves"
mapEvents: "Persi Disapproves"
mapEvents: "Matrix_SelfJackIn"
mapEvents: "Matrix_SableJackIn"
mapEvents: "Event_MatrixPlayTeleportSound"
mapEvents: "Event_MatrixToggle"
senseTags: "isDorbi"
senseTags: "isPersi"
senseTags: "isSable"
senseTags: "isRafik"
goals {
  name: "You Died"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Must Have a Decker"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Acquire the Train Protocols"
  type: GoalType_Primary
  status: GoalStatus_Started
}
goals {
  name: "Find an Employee ID"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Get an ID Card for Cameron Ueda"
  type: GoalType_Secondary
  status: GoalStatus_Hidden
}
goals {
  name: "Take Taylor Minami\'s ID Card"
  type: GoalType_Secondary
  status: GoalStatus_Hidden
}
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "cc_a3_sf_s2"
parentStory: ""
scene_title: "INFODUMP"
scene_subtitle: ""
scene_synopsis: "Many academics consider Shiawase the first true megacorp. The landmark Supreme Court decision in their favor established the concept of extraterritoriality, the legal foundation upon which the modern world rests.\n\nShiawase facilities exude this legacy. Seemingly every square foot is designed to reinforce the impression of a grand, majestic, powerful, groundbreaking entity. You can\342\200\231t afford to let yourself be overawed by this feeling. You stride forward into the maw of the beast, searching for any sign of the information you seek."
scene_image: "cc_a3_sf_s2"
scene_continue_button_skip: false
scene_restore_runner_health: false
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Gangers"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "LoneStar"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Turrets"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
}
scene_dimensions {
  dimension_name: "Matrix"
  initial_alarm_state: 0
  turns_per_round: 3
  is_matrix: true
  max_alarm_value: 200
  heat_response_rating: 8
}
character_roster {
}
show_hiring_screen_on_scene_load: false
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 0
hiring_minimum_karma: 0
hiring_maximum_karma: 0
roster_overrides {
}
use_hiring_cost_warning: false
hiring_average_cost: 99999
override_hiring_average_cost: true
show_equip_screen_on_scene_load: false
is_persistant: false
is_persistant_has_value: false
can_move_outside_camera_regions: false
can_start_before_triggers: false
can_use_team_advancement: false

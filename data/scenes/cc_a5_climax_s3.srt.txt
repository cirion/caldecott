triggers {
  name: "Map_Start"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Music"
      args {
        call_value {
          functionName: "Get Map Item (Music)"
          args {
            string_value: "HongKong_Title"
          }
          args {
            string_value: "HongKong-TitleTheme-UI"
          }
        }
      }
      args {
        float_value: 0.75
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55f1f431643431743dd6126e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Map_Setup"
  events {
    ops {
      functionName: "On Map Setup"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55234fd0346435b0190018cd"
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5523462e346435b019001749"
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "55234637346435b01900174a"
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "561998f1346435301600196b"
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "561998703464353016001966"
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5619a3b334643530160019f7"
          }
        }
      }
    }
    ops {
      functionName: "Set Environmental Effect Amount"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "EnvironmentalEffects"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        int_value: 200
      }
    }
  }
  isActive: true
  idRef {
    id: "55f1f42d643431743dd6126d"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Debug"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "55ff831e346435280e006b91"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "55ff82dd346435280e006b8d"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "isDebugging"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "566e4f333438376c1e004874"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "55f1f433643431743dd6126f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Up_SouthStairs"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55234fd0346435b0190018cd"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 1.5
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:props"
          }
          args {
            string_value: "LadderClimb"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Stairs Transition"
          }
        }
      }
      args {
        float_value: 1.5
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Stairs Transition"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "55234647346435b01900174b"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55234fb9346435b0190018cb"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Down_SouthStairs"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55234647346435b01900174b"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 1.5
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:props"
          }
          args {
            string_value: "LadderClimb"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Stairs Transition"
          }
        }
      }
      args {
        float_value: 1.5
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Stairs Transition"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "55234fd0346435b0190018cd"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55235120346435b0190018d4"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Up_WestStairs"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5523462e346435b019001749"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 1.5
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:props"
          }
          args {
            string_value: "LadderClimb"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Stairs Transition"
          }
        }
      }
      args {
        float_value: 1.5
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Stairs Transition"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "55234696346435b01900174e"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55235b3c346435b0120001fd"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Down_WestStairs"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55234696346435b01900174e"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 1.5
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:props"
          }
          args {
            string_value: "LadderClimb"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Stairs Transition"
          }
        }
      }
      args {
        float_value: 1.5
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Stairs Transition"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5523462e346435b019001749"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55235b3c346435b0120001fe"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Up_EastStairs"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55234637346435b01900174a"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 1.5
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:props"
          }
          args {
            string_value: "LadderClimb"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Stairs Transition"
          }
        }
      }
      args {
        float_value: 1.5
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Stairs Transition"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "55234698346435b01900174f"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55235b3e346435b0120001ff"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Down_EastStairs"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55234698346435b01900174f"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 1.5
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:props"
          }
          args {
            string_value: "LadderClimb"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Stairs Transition"
          }
        }
      }
      args {
        float_value: 1.5
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Stairs Transition"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "55234637346435b01900174a"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55235b3e346435b012000200"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "YouDied"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "You Died"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55f1f434643431743dd61270"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "AvaOpinion_DidNotDestroyShip"
  events {
    ops {
      functionName: "On Map Setup"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "cc_a2_persi_s2-DestroyedShip"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "avaOpinion"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "56198e2f346435301600174b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "AvaOpinion_DidNotDestroyLab"
  events {
    ops {
      functionName: "On Map Setup"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "cc_a3_sf_berkeley-WreckedLab"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "avaOpinion"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "56198e7d346435301600174c"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "StartFight_AgainstAvaAndKroin_OFF"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Defeat the HPF"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Defeat Shiawase Security"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 4
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 5
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56129a6564343179244a4a3f"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5619da273464353016002ab1"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5613dfa2643431e641bde91e"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5619da3c3464353016002ab4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56129ab864343179244a4a42"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5619da373464353016002ab3"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5613e0d7643431e641bde929"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5619da113464353016002ab0"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "55f0b2ed643431a119977c30"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5619da3e3464353016002ab5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "55f0b307643431a119977c31"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5619da2a3464353016002ab2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56129a3b64343179244a4a3b"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56129ab864343179244a4a41"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Play Music"
      args {
        call_value {
          functionName: "Get Map Item (Music)"
          args {
            string_value: "HongKong_CombatBoss"
          }
          args {
            string_value: "HongKong-Combat-Boss"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "56198fac34643530160017fd"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "StartFight_AgainstKroinAlone_OFF"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Defeat the HPF"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Play FX on Actor"
      args {
        string_value: "MatrixESPSpawn_quiet"
      }
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isInitialAva"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor With Fade"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isInitialAva"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5619c4373464353016002419"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56129a3b64343179244a4a3b"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 4
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "55f0b307643431a119977c31"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5619da2a3464353016002ab2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5613e0d7643431e641bde929"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5619da113464353016002ab0"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56129a6564343179244a4a3f"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5619da273464353016002ab1"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
    }
    ops {
      functionName: "Play Music"
      args {
        call_value {
          functionName: "Get Map Item (Music)"
          args {
            string_value: "HongKong_CombatBoss"
          }
          args {
            string_value: "HongKong-Combat-Boss"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "56198fbf34643530160017fe"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "OpeningConvo"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5619cb6434643530160024fa"
          }
        }
      }
    }
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5619cb5234643530160024f9"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Enable/Disable Manual Turn Mode in Dimension"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "55f0adf1643431a119977c22"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "55f0b2ed643431a119977c30"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5619cfcb34643530160029cc"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5619cb9034643530160024fb"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "InitialFightStarts_OFF"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Contact Eriana for Reinforcements"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Prevent the Spread of Hemlock"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "55f0b307643431a119977c31"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Kill the trogs! Flood the chamber with Hemlock!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Enable/Disable Manual Turn Mode in Dimension"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5619cfcb34643530160029cc"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "IncrementHemlock"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "hemlockTurns"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "hemlockTurnsMax"
          }
        }
      }
    }
    ops {
      functionName: "Evaluate Turn Mode in Dimension"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TurnBasedOrFreeMove"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "hemlockTurns"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: false
  idRef {
    id: "561993fa3464353016001961"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "UpdateHemlock_Status"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "isHemlockEnabled"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Evaluate Turn Mode in Dimension"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TurnBasedOrFreeMove"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Screen Label Progress Bar (int)"
      args {
        string_value: "Hemlock"
      }
      args {
        string_value: "Local Hemlock Deployment"
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "hemlockTurns"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "hemlockTurnsMax"
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "561993f23464353016001960"
  }
  elseActions {
    ops {
      functionName: "Remove Screen Label"
      args {
        string_value: "Hemlock"
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "UpdateHemlock_Props"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "isHemlockEnabled"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "hemlockTurns"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "hemlockTurnsMax"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isHemlockVent"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "56199a7b3464353016001971"
  }
  elseActions {
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isHemlockVent"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "DealHemlockDamage"
  events {
    ops {
      functionName: "On Actor Start Turn"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "isHemlockEnabled"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Evaluate If Actor is Inside Region"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "AreOrAreNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "554f9fac346435e81c0036aa"
          }
        }
      }
    }
    ops {
      functionName: "OR"
      args {
        call_value {
          functionName: "Compare Actor Race"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Race"
              }
              args {
                int_value: 3
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Compare Actor Race"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Race"
              }
              args {
                int_value: 4
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "hemlockTurns"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "hemlockTurnsMax"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Cause Damage"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 10
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HPOrAP"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "pain"
          }
        }
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "561995543464353016001963"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_CausedPain"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "561994e43464353016001962"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "AdvancePainPhrase"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "pain"
          }
        }
      }
      args {
        string_value: "Ow!"
      }
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "pain"
          }
        }
      }
      args {
        string_value: "Make it stop!"
      }
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "pain"
          }
        }
      }
      args {
        string_value: "No!"
      }
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "pain"
          }
        }
      }
      args {
        string_value: "* Grunt *"
      }
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "pain"
          }
        }
      }
      args {
        string_value: "Ugh..."
      }
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "pain"
          }
        }
      }
      args {
        string_value: "Ouch!"
      }
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "pain"
          }
        }
      }
      args {
        string_value: "Agh!"
      }
    }
  }
  isActive: true
  idRef {
    id: "561995543464353016001963"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "CausedPainReport"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_CausedPain"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Hemlock will swiftly kill any orks or trolls in its path.\nMove potential victims to higher ground to avoid the onslaught, or find a way to stop the deployment."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 10
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "561996363464353016001964"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Divert_Hemlock"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "561998f1346435301600196b"
          }
        }
      }
    }
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "561998703464353016001966"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "hemlockTurns"
          }
        }
      }
      args {
        int_value: -2
      }
    }
    ops {
      functionName: "End Current Actor Turn"
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_DivertHemlock"
          }
        }
      }
    }
    ops {
      functionName: "Set Screen Label Progress Bar (int)"
      args {
        string_value: "Hemlock"
      }
      args {
        string_value: "Local Hemlock Deployment"
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "hemlockTurns"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "hemlockTurnsMax"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "561998bb3464353016001968"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Divert_HemlockInfo"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_DivertHemlock"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You have temporarily halted the flow of Hemlock into the structure."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 5
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "56199984346435301600196e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "AllUpstairsInfo"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_AllUpstairs"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Now that your team has abandoned the ground floor, your foes can easily shoot at you from below.\nTo avoid damage, keep at least one team member in the main factory area."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 10
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "56199ad53464353016001972"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "DealUpstairsDamage"
  events {
    ops {
      functionName: "On Actor Start Turn"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor is Inside Region"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "AreOrAreNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "554f9fc2346435e81c0036ab"
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "canExit"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Cause Damage"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 5
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HPOrAP"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_AllUpstairs"
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:weapons"
          }
          args {
            string_value: "SniperRifle"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "56199ba63464353016001973"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Matrix_DisableHemlockAlpha"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55f3913a346435d01a007b86"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55f3913a346435d01a007b86"
          }
        }
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "disabledHemlock"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "56199f023464353016001978"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "56199ebd3464353016001977"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix_DisableHemlockOmega"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55f3913a346435d01a00774f"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "55f3913a346435d01a00774f"
          }
        }
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "disabledHemlock"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "56199f023464353016001978"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "56199fad3464353016001979"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "AllHemlockDisabled"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "disabledHemlock"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "isHemlockEnabled"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Remove Screen Label"
      args {
        string_value: "Hemlock"
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You have shut down the flow of Hemlock into the factory. Your allies will be safe for the remainder of the battle."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 7
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Prevent the Spread of Hemlock"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "56199f023464353016001978"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix_Red Alert"
  events {
    ops {
      functionName: "On Dimension Heat Threshold"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Directional Light Color"
      args {
        float_value: 252
      }
      args {
        float_value: 234
      }
      args {
        float_value: 242
      }
      args {
        float_value: 255
      }
      args {
        float_value: -0.5
      }
      args {
        float_value: -1
      }
      args {
        float_value: -0.75
      }
      args {
        float_value: 3
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "55f3913a346435d01a00775a"
          }
        }
      }
    }
    ops {
      functionName: "Set Ambient Light Color"
      args {
        float_value: 220
      }
      args {
        float_value: 20
      }
      args {
        float_value: 60
      }
      args {
        float_value: 255
      }
      args {
        float_value: 3
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "55f3913a346435d01a00775a"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55eb71c1346435102d004e6b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix_TeleportInResponseIC"
  events {
    ops {
      functionName: "On Dimension Heat Threshold"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "55eb7be4346435102d004e7a"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor to Area Around Actor"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isResponseIC"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        int_value: 3
      }
      args {
        int_value: 6
      }
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isResponseIC"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
    }
    ops {
      functionName: "Play FX on Actor"
      args {
        string_value: "MatrixESPSpawn_quiet"
      }
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isResponseIC"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_MatrixPlayTeleportSound"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55eb799c346435102d004e72"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix_PlayTeleportSound"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_MatrixPlayTeleportSound"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "All Actors With Tag"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isResponseIC"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:props"
          }
          args {
            string_value: "teleportIC"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55eb7b44346435102d004e79"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Matrix_TeleportFollowResponseIC_OFF"
  events {
    ops {
      functionName: "On Actor Teleport"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
    ops {
      functionName: "Actor is a Persona"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Actor is Player Controlled"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor to Area Around Actor"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isResponseIC"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        int_value: 3
      }
      args {
        int_value: 6
      }
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isResponseIC"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
    }
    ops {
      functionName: "Play FX on Actor"
      args {
        string_value: "MatrixESPSpawn_quiet"
      }
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isResponseIC"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_MatrixPlayTeleportSound"
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "55eb7be4346435102d004e7a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Matrix_CameraTeleport"
  events {
    ops {
      functionName: "On Actor Teleport"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55eb70f4346435102d004e6a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "SummonAres_OFF"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5619a3b334643530160019f7"
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Contact Eriana for Reinforcements"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Wait for Rounds"
      args {
        int_value: 1
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor With Fade"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isEarlyBackup"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5619b14b34643530160022b4"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 6
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Nothing Selected"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Clear Waypoint from Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5619a3b334643530160019f7"
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5619a4383464353016001a64"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "PeacefulEndWithAres_OFF"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "cc_a5_climax_s3-AlliedWithErrant"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5619ac6b34643530160021f4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "566e50173438376c1e004890"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5619a93a346435301600203b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Fight_AvaAlliedWithAres_OFF"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isInitialAva"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5619b11734643530160022b2"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5619aead34643530160021fc"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "cc_a5_climax_s3-AlliedWithErrant"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Defeat Shiawase Security"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 5
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 5
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 6
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "561af072346435cc390044ea"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "cc_a5_climax_s3-AvaReneged"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "566e50173438376c1e004890"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5619a9ae34643530160020a9"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Fight_Ares_OFF"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Defeat Eriana"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5619af86346435301600226a"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 6
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5619ab1f3464353016002117"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Fight_AresAlliedWithAva_OFF"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isInitialAva"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5619b11734643530160022b2"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Defeat Eriana"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5619afa5346435301600226b"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 6
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "cc_a5_climax_s3-AlliedWithAva"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5619af86346435301600226a"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 5
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "cc_a5_climax_s3-AlliedWithAva"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5619ab4f3464353016002118"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Fight_AresAndAva_OFF"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isInitialAva"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5619b11734643530160022b2"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Defeat Eriana"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Defeat Shiawase Security"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5619aead34643530160021fc"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5619af86346435301600226a"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 6
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 5
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 6
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 5
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "561af072346435cc390044ea"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "cc_a5_climax_s3-AvaReneged"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5619ac1d3464353016002186"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "ExitEnabled"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Clear All Waypoints"
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "canExit"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5619a7753464353016001d51"
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Prevent the Spread of Hemlock"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Exit the Facility"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Stop Music"
    }
    ops {
      functionName: "Play Music"
      args {
        call_value {
          functionName: "Get Map Item (Music)"
          args {
            string_value: "HongKong_HubSafeHouse"
          }
          args {
            string_value: "HongKong-Hub-SafeHouse"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Team\'s Turn"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Team\'s Turn"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Team\'s Turn"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Team\'s Turn"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Team\'s Turn"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "End Current Team Round"
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "561998f1346435301600196b"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "561998703464353016001966"
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_TeleportCameraToPC0"
          }
        }
      }
      args {
        float_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "5619ac6b34643530160021f4"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "DefeatedAvaSecondRound"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Goal"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Defeat Shiawase Security"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 5
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 7
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5619ac6b34643530160021f4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Defeat Shiawase Security"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5619aead34643530160021fc"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "DefeatedAres"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Goal"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Defeat Eriana"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 6
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5619ac6b34643530160021f4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Defeat Eriana"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5619af86346435301600226a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "DefeatedAresWithAva\'sHelp"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 6
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "cc_a5_climax_s3-AlliedWithAva"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "Specific Actor"
              args {
                call_value {
                  functionName: "Get Map Item (Actor)"
                  args {
                    string_value: "55f0b2ed643431a119977c30"
                  }
                }
              }
              args {
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "55f0bebd643431a119978abd"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "55f0b2ed643431a119977c30"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5619afa5346435301600226b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "ReinforceHPF"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor With Fade"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56129a6564343179244a4a3e"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5619b16834643530160022b5"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 4
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Teleport Actor With Fade"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5613e0d7643431e641bde92b"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5619c29d34643530160022b8"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 4
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Teleport Actor With Fade"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56129a3b64343179244a4a3a"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5619b11734643530160022b2"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 4
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Teleport Actor With Fade"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56129a0864343179244a4a39"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5619b14b34643530160022b4"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 4
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5619bf2f34643530160022b6"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "KroinDies"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "55f0b307643431a119977c31"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "* Cough *\n\nYou will never end us. Our hate makes us stronger than you will ever be."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 10
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5619c4d9346435301600241a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "AvaDies"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "55f0b2ed643431a119977c30"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "My life\'s dreams... how could it end like this?"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 10
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5619c8b3346435301600241b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "ErianaDies"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5619c08334643530160022b7"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "What a waste..."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 5
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5619c8b5346435301600241c"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "DefeatedAvaFirstRound"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Goal"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Defeat Shiawase Security"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 5
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Defeat Shiawase Security"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "561af072346435cc390044ea"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "EndedPhase1"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Goal"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Defeat the HPF"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 4
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Evaluate Goal"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Defeat Shiawase Security"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Defeat the HPF"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor With Fade"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isInitialErrant"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5619b14b34643530160022b4"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Add Camera Point of Interest (Point)"
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5619b14b34643530160022b4"
              }
            }
          }
        }
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "55f0ba71643431a11997873a"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5619c08334643530160022b7"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Clear Waypoint from Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5619a3b334643530160019f7"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5619c8f6346435301600241d"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "ReinforceAres"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor With Fade"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5613dfc7643431e641bde923"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5619c29d34643530160022b8"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Teleport Actor With Fade"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5613dfd7643431e641bde927"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5619b16834643530160022b5"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Teleport Actor With Fade"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5613dfc3643431e641bde922"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5619b13034643530160022b3"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Teleport Actor With Fade"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5613e066643431e641bde928"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5619b14b34643530160022b4"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "5619ca5134643530160024f8"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Debug_KillHPF"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5619e1913464353016002ab7"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 4
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5619e1ca3464353016002abe"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Debug_KillShiawase"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5619e1a03464353016002ab9"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 5
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5619e1ec3464353016002abf"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Debug_KillErrant"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5619e19a3464353016002ab8"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 6
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5619e1ee3464353016002ac0"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "ReinforceShiawase"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor With Fade"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5613dfa2643431e641bde91c"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5619b13034643530160022b3"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Teleport Actor With Fade"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5613dfa2643431e641bde920"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5619b16834643530160022b5"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Teleport Actor With Fade"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56129ab864343179244a4a40"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5619b11734643530160022b2"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Teleport Actor With Fade"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5613dfa2643431e641bde91f"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5619b16834643530160022b5"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "561af5f8346435cc390046b8"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "ShiawaseAggrosShadowrunners"
  events {
    ops {
      functionName: "On Actor Teleport"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Evaluate Goal"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Defeat Shiawase Security"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "561af72a346435cc390046b9"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "ErrantAggrosShadowrunners"
  events {
    ops {
      functionName: "On Actor Teleport"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Evaluate Goal"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Defeat Eriana"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "561af764346435cc390046ba"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "ShiawaseAggrosAres"
  events {
    ops {
      functionName: "On Actor Teleport"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "cc_a5_climax_s3-AlliedWithAva"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "561af774346435cc390046bb"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "AresAggrosShiawase"
  events {
    ops {
      functionName: "On Actor Teleport"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "cc_a5_climax_s3-AlliedWithErrant"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "561af7a4346435cc390046bc"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Bark Rafik"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isRafik"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 1
          }
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "5505a99b346435a418004d07"
              }
              args {
                string_value: "Const_OddsOfBark"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Bark"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 1
          }
          args {
            int_value: 10
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "$(story.STRING_BARK_RAFIK_$(scene.Bark))"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "56202b976434316e3c0d061a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Bark Dorbi"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isDorbi"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 1
          }
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "5505a99b346435a418004d07"
              }
              args {
                string_value: "Const_OddsOfBark"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Bark"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 1
          }
          args {
            int_value: 10
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "$(story.STRING_BARK_DORBI_$(scene.Bark))"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "562086b1346435ac00004188"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Bark Sable"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isSable"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 1
          }
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "5505a99b346435a418004d07"
              }
              args {
                string_value: "Const_OddsOfBark"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Bark"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 1
          }
          args {
            int_value: 10
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "$(story.STRING_BARK_SABLE_$(scene.Bark))"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "562086fe346435ac00004189"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Bark Persi"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isPersi"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 1
          }
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "5505a99b346435a418004d07"
              }
              args {
                string_value: "Const_OddsOfBark"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Bark"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 1
          }
          args {
            int_value: 10
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "$(story.STRING_BARK_PERSI_$(scene.Bark))"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "56208734346435ac0000418a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Bark Kora"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isKora"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 1
          }
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "5505a99b346435a418004d07"
              }
              args {
                string_value: "Const_OddsOfBark"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Bark"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 1
          }
          args {
            int_value: 8
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "$(story.STRING_BARK_KORA_$(scene.Bark))"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "56208d4c346435ac0000418c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Bark Zielor"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isZielor"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 1
          }
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "5505a99b346435a418004d07"
              }
              args {
                string_value: "Const_OddsOfBark"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Bark"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 1
          }
          args {
            int_value: 6
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "$(story.STRING_BARK_ZIELOR_$(scene.Bark))"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "56208e2f3464356015006381"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "ZielorFlips"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "cc_a5_climax_s3-AlliedWithErrant"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "OR"
      args {
        call_value {
          functionName: "Evaluate If Actor is Inside Region"
          args {
            call_value {
              functionName: "All Actors With Tag"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isZielor"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AreOrAreNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "554f9fac346435e81c0036aa"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Evaluate If Actor is Inside Region"
          args {
            call_value {
              functionName: "All Actors With Tag"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isZielor"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AreOrAreNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "554f9fc2346435e81c0036ab"
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "566e4f723438376c1e00487e"
          }
        }
      }
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isZielor"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Control"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isZielor"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (Player)"
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PlayerOrAI"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isZielor"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Actor AI Script"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isZielor"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        string_value: "gumbo_Soldier"
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "Global_ZielorTeamState"
          }
        }
      }
      args {
        int_value: -1
      }
    }
  }
  isActive: false
  idRef {
    id: "566e50173438376c1e004890"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Dummy"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "5505a99b346435a418004d07"
          }
          args {
            string_value: "Global_ZielorTeamState"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
  }
  isActive: true
  idRef {
    id: "566e51e33438376c1e004892"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Teleport Camera to PC0"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_TeleportCameraToPC0"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "56d23bdd393565b84000084e"
  }
  elseActions {
  }
  is_oneshot: true
}
regions {
  name: "Camera Ground Floor"
  position {
    x: -69
    y: -68
    width: 41
    height: 51
  }
  enabledAtStart: true
  is_camera_region: true
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "554f9fac346435e81c0036aa"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.58823532
    g: 0.1254902
    b: 0.58823532
    a: 1
  }
  ambient_light_color {
    r: 0.29411766
    g: 0.14901961
    b: 0.29411766
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Camera Upstairs"
  position {
    x: -147
    y: -69
    width: 36
    height: 31
  }
  enabledAtStart: true
  is_camera_region: true
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "554f9fc2346435e81c0036ab"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.4509804
    g: 0.17647059
    b: 0.43529412
    a: 1
  }
  ambient_light_color {
    r: 0.074509807
    g: 0.32941177
    b: 0.090196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "MatrixTeleport_Core_SystemToOffice"
  position {
    x: -215
    y: -59
    width: 2
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55f39139346435d01a007619"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: true
  linked_teleporter_region: "55bac677303031f80e00128d"
  teleport_facing: 0
  teleport_sound_fx: ""
  teleport_sound_volume: 0
  teleport_source_fx: ""
  teleport_destination_fx: "HongKong:matrixTeleport"
  teleport_pc_only: true
  teleport_fade_time: 0
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "MatrixTeleport_MagicLab_DataStoreNodeToStart"
  position {
    x: -281
    y: -44
    width: 1
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55f39139346435d01a00761c"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: true
  linked_teleporter_region: "55a43ce33030313c0c008094"
  teleport_facing: -1
  teleport_sound_fx: ""
  teleport_sound_volume: 0
  teleport_source_fx: ""
  teleport_destination_fx: "HongKong:matrixTeleport"
  teleport_pc_only: true
  teleport_fade_time: 0
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "MoveTarget_MagicLab_Matrix_Security_SecurityNode_IC_1"
  position {
    x: -267
    y: -84
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55f3913a346435d01a00762d"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "MatrixNode_MagicLab_DataStore"
  position {
    x: -281
    y: -54
    width: 41
    height: 24
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: true
  is_vfx_fill_region: false
  idRef {
    id: "55f3913a346435d01a007650"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "MoveTarget_MagicLab_Matrix_Security_DataNode_IC_2"
  position {
    x: -262
    y: -39
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55f3913a346435d01a007666"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "MatrixNode_MagicLab_Security"
  position {
    x: -277
    y: -92
    width: 28
    height: 28
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: true
  is_vfx_fill_region: false
  idRef {
    id: "55f3913a346435d01a0076b9"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "MatrixRegion_Core_Office"
  position {
    x: -235
    y: -85
    width: 36
    height: 30
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: true
  is_vfx_fill_region: false
  idRef {
    id: "55f3913a346435d01a007755"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "CameraRegion_Matrix"
  position {
    x: -282
    y: -92
    width: 85
    height: 69
  }
  enabledAtStart: true
  is_camera_region: true
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55f3913a346435d01a00775a"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.031372551
    g: 0.72941178
    b: 0.086274512
    a: 1
  }
  ambient_light_color {
    r: 0
    g: 0.29019609
    b: 0.047058824
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: false
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: false
  loop_combat_wrapup_music: false
  combat_intense_threshold: 1
  combat_wrapup_threshold: 1
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "MoveTarget_MagicLab_Matrix_Security_DataNode_IC_1"
  position {
    x: -270
    y: -52
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55f3913a346435d01a007773"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "MoveTarget_MagicLab_Matrix_Security_SecurityNode_IC_2"
  position {
    x: -263
    y: -76
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55f3913a346435d01a0077e1"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "MoveTarget_CoreSystem_Office_IC"
  position {
    x: -213
    y: -67
    width: 2
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55f3913a346435d01a007888"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "MatrixTeleport_MagicLab_SecurityNodeToStart"
  position {
    x: -250
    y: -79
    width: 1
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55f3913a346435d01a00793c"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: true
  linked_teleporter_region: "55a43c723030313c0c00808d"
  teleport_facing: -1
  teleport_sound_fx: ""
  teleport_sound_volume: 0
  teleport_source_fx: ""
  teleport_destination_fx: "HongKong:matrixTeleport"
  teleport_pc_only: true
  teleport_fade_time: 0
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "MoveTarget_MagicLab_Matrix_Security_SecurityNode_IC_3"
  position {
    x: -262
    y: -68
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "55f3913a346435d01a007958"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Camera Holding"
  position {
    x: -16
    y: -42
    width: 11
    height: 20
  }
  enabledAtStart: true
  is_camera_region: true
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5619b0e534643530160022b1"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: true
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Reinforce Northeast"
  position {
    x: -66
    y: -37
    width: 1
    height: 3
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5619b11734643530160022b2"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Reinforce Northwest"
  position {
    x: -66
    y: -51
    width: 1
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5619b13034643530160022b3"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Reinforce West"
  position {
    x: -44
    y: -58
    width: 4
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5619b14b34643530160022b4"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Reinforce East"
  position {
    x: -54
    y: -20
    width: 1
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5619b16834643530160022b5"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Reinforce West North West"
  position {
    x: -54
    y: -58
    width: 2
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5619c29d34643530160022b8"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Ava Chill Zone"
  position {
    x: -12
    y: -33
    width: 2
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5619c4373464353016002419"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Trigger Opening Convo North"
  position {
    x: -35
    y: -58
    width: 1
    height: 10
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5619cb5234643530160024f9"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Trigger Opening Convo East"
  position {
    x: -35
    y: -52
    width: 7
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5619cb6434643530160024fa"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Mark Initial  HPF Pistol"
  position {
    x: -41
    y: -54
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5619da113464353016002ab0"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Mark Initial HPF Adept"
  position {
    x: -37
    y: -52
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5619da273464353016002ab1"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Mark Initial Kroin"
  position {
    x: -45
    y: -52
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5619da2a3464353016002ab2"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Mark Initial Shiawase Shotgun"
  position {
    x: -47
    y: -56
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5619da373464353016002ab3"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Mark Initial Shiawase SMG"
  position {
    x: -53
    y: -55
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5619da3c3464353016002ab4"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Mark Initial Ava"
  position {
    x: -48
    y: -47
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5619da3e3464353016002ab5"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: -31
    y: 0
    z: -57
  }
  orientation: ORIENTATION_E
  idRef {
    id: "55235017346435b0190018d3"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 0
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -48
    y: 0
    z: -51
  }
  orientation: ORIENTATION_S
  GeneralTags: "isSecurity"
  GeneralTags: "isInitialAva"
  displayName: "Ava"
  idRef {
    id: "55f0b2ed643431a119977c30"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Story/LynneTelestrian"
    character_sheet_id: "RedSamurai_Lv1_Heavy"
    equipment_sheet_id: "RedSamurai_Lv1_Heavy"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 3
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 5
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 5
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Errant_High_Drone"
    }
    team_id: "Shiawase"
    char_name: "Ava Montalvo"
    GeneralTags: "isSecurity"
    GeneralTags: "isInitialAva"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "pc_elffemale_06b_platinum"
    }
    karma: 183
    hiring_cost_override: 1000
    scale_character_sheet: true
    cyberware_head: "(Head) Datajack"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -46
    y: 0
    z: -51
  }
  orientation: ORIENTATION_N
  displayName: "Kroin"
  idRef {
    id: "55f0b307643431a119977c31"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/DwarfMale"
    character_sheet_id: "RedSamurai_Lv1_Mage"
    equipment_sheet_id: "RedSamurai_Lv1_Mage"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_Mage"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "NPC_HK_Magic_MageArcane"
    }
    team_id: "HPF"
    char_name: "Kroin"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: "backerpc_dwarfmale_chrisking"
    }
    portrait_code_override: "s6h4c11b0c0t0"
    karma: 107
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -274
    y: 0
    z: -79
  }
  orientation: ORIENTATION_S
  displayName: "Blocker_Security Node: Floor 49"
  idRef {
    id: "55f3913a346435d01a007652"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_BlockerIC
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_goldBlocker"
    character_sheet_id: "IC_Lv1_White_Blocker"
    equipment_sheet_id: "IC White Blocker Lv1 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_G_BlockerIC"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Blocker IC"
    pc_spawn_number: -1
    spawn_type: SpawnType_BlockerIC
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
    blocker_ic_panel_difficulty: 2
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -211
    y: 0
    z: -79
  }
  orientation: ORIENTATION_E
  displayName: "MagicLab_Security_IC_2"
  idRef {
    id: "55f3913a346435d01a0076a3"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_goldRanged"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv1 Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White Ranged IC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -253
    y: 0
    z: -44
  }
  orientation: ORIENTATION_N
  displayName: "Blocker_SecureDataStore: Floor 49"
  idRef {
    id: "55f3913a346435d01a0076ec"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_BlockerIC
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_goldBlocker"
    character_sheet_id: "IC_Lv1_White_Blocker"
    equipment_sheet_id: "IC White Blocker Lv1 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_G_BlockerIC"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Blocker IC"
    pc_spawn_number: -1
    spawn_type: SpawnType_BlockerIC
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
    blocker_ic_panel_difficulty: 2
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -222
    y: 0
    z: -81
  }
  orientation: ORIENTATION_E
  displayName: "MagicLab_Security_IC_1"
  idRef {
    id: "55f3913a346435d01a0076f3"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_goldRanged"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv1 Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White Ranged IC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -223
    y: 0
    z: -65
  }
  orientation: ORIENTATION_S
  displayName: "MagicLab_Security_IC_3"
  idRef {
    id: "55f3913a346435d01a0077aa"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_goldSupport"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Support Lv1 Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Shield"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White Sentry IC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -264
    y: 0
    z: -46
  }
  orientation: ORIENTATION_N
  idRef {
    id: "55f3913a346435d01a007805"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_blackMelee"
    character_sheet_id: "IC_Lv1_Black_Ranged"
    equipment_sheet_id: "IC Black Melee Lv1 Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Black Melee IC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 33
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -209
    y: 0
    z: -71
  }
  orientation: ORIENTATION_E
  displayName: "DestroyerIC_CoreSystem_Office"
  idRef {
    id: "55f3913a346435d01a007853"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_blackTank"
    character_sheet_id: "IC_Lv1_Black_Tank"
    equipment_sheet_id: "IC Black Tank Lv1 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_MatrixTank"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Destroyer IC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    hiring_type: HiringType_None
    dimension_name: "Matrix"
    karma: 33
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -263
    y: 0
    z: -52
  }
  orientation: ORIENTATION_N
  displayName: "MagicLab_DataStore_IC_1"
  idRef {
    id: "55f3913a346435d01a007897"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_goldRanged"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv1 Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White Ranged IC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -204
    y: 0
    z: -68
  }
  orientation: ORIENTATION_W
  displayName: "MagicLab_DataStore_IC_2"
  idRef {
    id: "55f3913a346435d01a0079bc"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_goldRanged"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv1 Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White Ranged IC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -213
    y: 0
    z: -75
  }
  orientation: ORIENTATION_S
  displayName: "Blocker_Hemlock Control Alpha"
  idRef {
    id: "55f3913a346435d01a007b46"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_BlockerIC
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_goldBlocker"
    character_sheet_id: "IC_Lv1_White_Blocker"
    equipment_sheet_id: "IC White Blocker Lv1 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_G_BlockerIC"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Blocker IC"
    pc_spawn_number: -1
    spawn_type: SpawnType_BlockerIC
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
    blocker_ic_panel_difficulty: 2
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -222
    y: 0
    z: -75
  }
  orientation: ORIENTATION_N
  displayName: "Blocker_Hemlock Control Omega"
  idRef {
    id: "55f3913a346435d01a007b6c"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_BlockerIC
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_goldBlocker"
    character_sheet_id: "IC_Lv1_White_Blocker"
    equipment_sheet_id: "IC White Blocker Lv1 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_G_BlockerIC"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Blocker IC"
    pc_spawn_number: -1
    spawn_type: SpawnType_BlockerIC
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 29
    hiring_cost_override: 1000
    scale_character_sheet: true
    blocker_ic_panel_difficulty: 2
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -281
    y: 0
    z: -62
  }
  orientation: ORIENTATION_S
  GeneralTags: "isResponseIC"
  idRef {
    id: "55ff81f0346435bc00003b4e"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_blackMelee"
    character_sheet_id: "IC_Lv1_Black_Ranged"
    equipment_sheet_id: "IC Black Melee Lv1 Gear"
    character_mod {
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
    }
    team_id: "LoneStar"
    char_name: "Black Melee IC"
    GeneralTags: "isResponseIC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -280
    y: 0
    z: -62
  }
  orientation: ORIENTATION_S
  GeneralTags: "isResponseIC"
  idRef {
    id: "55ff81f2346435bc00003b4f"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_blackRanged"
    character_sheet_id: "IC_Lv1_Black_Ranged"
    equipment_sheet_id: "IC Black Ranged Lv1 Gear"
    character_mod {
      stats {
        morale: 24
        discipline: 24
        awareness: 24
        protect_tether_range: 5
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
    }
    team_id: "LoneStar"
    char_name: "Black Ranged IC"
    GeneralTags: "isResponseIC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -281
    y: 0
    z: -61
  }
  orientation: ORIENTATION_S
  GeneralTags: "isResponseIC"
  idRef {
    id: "55ff81f4346435bc00003b50"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_blackTank"
    character_sheet_id: "IC_Lv1_Black_Tank"
    equipment_sheet_id: "IC Black Tank Lv1 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_MatrixTank"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Destroyer IC"
    GeneralTags: "isResponseIC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    hiring_type: HiringType_None
    dimension_name: "Matrix"
    karma: 33
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -280
    y: 0
    z: -61
  }
  orientation: ORIENTATION_S
  GeneralTags: "isResponseIC"
  idRef {
    id: "55ff8201346435bc00003b51"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:KnightErrants/HumanMaleKnightErrant"
    character_sheet_id: "Errant_Lv1_Decker"
    equipment_sheet_id: "Errant_Lv1_Decker_Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Shiawase Sysadmin"
    GeneralTags: "isResponseIC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Avatar
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 60
    scale_character_sheet: true
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: -31
    y: 0
    z: -58
  }
  orientation: ORIENTATION_E
  displayName: "PC1"
  idRef {
    id: "55ff82e8346435280e006b8e"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "PC1"
    enabled_at_start: true
    pc_spawn_number: 1
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: -30
    y: 0
    z: -58
  }
  orientation: ORIENTATION_E
  displayName: "PC2"
  idRef {
    id: "55ff82ea346435280e006b8f"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "PC2"
    enabled_at_start: true
    pc_spawn_number: 2
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: -29
    y: 0
    z: -58
  }
  orientation: ORIENTATION_E
  displayName: "PC3"
  idRef {
    id: "55ff82eb346435280e006b90"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "PC3"
    enabled_at_start: true
    pc_spawn_number: 3
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -31
    y: 0
    z: -54
  }
  orientation: ORIENTATION_S
  displayName: "Debug Sable"
  idRef {
    id: "55ff831e346435280e006b91"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/TrollMale"
    character_sheet_id: "Crew_Sable_Lv1"
    equipment_sheet_id: "Crew_Sable_Lv1_Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Player"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Shadowrunners"
    char_name: "Sable"
    GeneralTags: "isSable"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    cyberware_eyes: "(Eyes) Vision Magnification Eyes 1"
    portrait {
      filename: "pc_trollmale_01hk_rigger"
    }
    description_bio: "A most curious troll."
    portrait_code_override: "s3h8c11b4c11t3"
    karma: 73
    hiring_cost_override: 0
    hiring_tag: "Crew: Decker"
    id: "crew_lv1_sable"
    cyberware_head: "(Head) Datajack"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -11
    y: 0
    z: -39
  }
  orientation: ORIENTATION_S
  GeneralTags: "isHPF"
  displayName: "HPF Reinforce 4 Captain"
  idRef {
    id: "56129a0864343179244a4a39"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Security/DwarfMaleSecurity"
    character_sheet_id: "Errant_Lv1_Captain"
    equipment_sheet_id: "Errant_Lv1_Captain"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeBoss
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "HPF"
    char_name: "HPF Cell Leader"
    GeneralTags: "isHPF"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 52
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -10
    y: 0
    z: -39
  }
  orientation: ORIENTATION_S
  GeneralTags: "isHPF"
  displayName: "HPF Reinforce 3 Pistol"
  idRef {
    id: "56129a3b64343179244a4a3a"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:HKPoor/DwarfFemalePoorCivilian2"
    character_sheet_id: "Errant_Lv1_Human_Pistol"
    equipment_sheet_id: "Errant_Lv1_Pistol"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "HPF"
    char_name: "HPF Fighter"
    GeneralTags: "isHPF"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 41
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -38
    y: 0
    z: -36
  }
  orientation: ORIENTATION_W
  GeneralTags: "isHPF"
  displayName: "HPF Flex"
  idRef {
    id: "56129a3b64343179244a4a3b"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Gangers/DwarfMaleBerlinGangerMohawk"
    character_sheet_id: "Errant_Lv1_Human_Mage"
    equipment_sheet_id: "Errant_Lv1_Spellcasting"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Mage"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "HPF Mage"
    GeneralTags: "isHPF"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 43
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -12
    y: 0
    z: -38
  }
  orientation: ORIENTATION_S
  GeneralTags: "isHPF"
  displayName: "HPF 1 Pistol"
  idRef {
    id: "56129a6564343179244a4a3c"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Story/DwarfMaleCadmus"
    character_sheet_id: "Errant_Lv1_Human_Pistol"
    equipment_sheet_id: "Errant_Lv1_Pistol"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "HPF Fighter"
    GeneralTags: "isHPF"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 41
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -11
    y: 0
    z: -38
  }
  orientation: ORIENTATION_N
  GeneralTags: "isHPF"
  displayName: "HPF 1 Shaman"
  idRef {
    id: "56129a6564343179244a4a3d"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Gangers/DwarfMaleGangerMohawk"
    character_sheet_id: "Errant_Lv1_Elf_Shaman"
    equipment_sheet_id: "Errant_Lv1_Shaman"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_grunt"
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "HPF Shaman"
    GeneralTags: "isHPF"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 56
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -8
    y: 0
    z: -39
  }
  orientation: ORIENTATION_S
  GeneralTags: "isHPF"
  displayName: "HPF Reinforce 1 Pistol"
  idRef {
    id: "56129a6564343179244a4a3e"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:HKCivilians/DwarfFemaleCivilian"
    character_sheet_id: "Errant_Lv1_Human_Pistol"
    equipment_sheet_id: "Errant_Lv1_Pistol"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "HPF"
    char_name: "HPF Fighter"
    GeneralTags: "isHPF"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 41
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -40
    y: 0
    z: -48
  }
  orientation: ORIENTATION_N
  GeneralTags: "isHPF"
  displayName: "HPF Initial Adept"
  idRef {
    id: "56129a6564343179244a4a3f"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:HKPoor/DwarfFemalePoorCivilian2"
    character_sheet_id: "Adept_Lv1_HtH"
    equipment_sheet_id: "Adept_Lv1_HtH_Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "HPF"
    char_name: "HPF Bruiser"
    GeneralTags: "isHPF"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 72
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -9
    y: 0
    z: -33
  }
  orientation: ORIENTATION_S
  GeneralTags: "isSecurity"
  displayName: "Shiawase Reinforce 3 Mage"
  idRef {
    id: "56129ab864343179244a4a40"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Shiawase/ElfFemaleShiawaseGuard"
    character_sheet_id: "Errant_Lv1_Human_Mage"
    equipment_sheet_id: "Errant_Lv1_Spellcasting"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Mage"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Shiawase"
    char_name: "Shiawase Mage"
    GeneralTags: "isSecurity"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 43
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -10
    y: 0
    z: -32
  }
  orientation: ORIENTATION_S
  GeneralTags: "isSecurity"
  displayName: "Shiawase Flex"
  idRef {
    id: "56129ab864343179244a4a41"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Shiawase/ElfMaleShiawaseGuard"
    character_sheet_id: "Errant_Lv1_Captain"
    equipment_sheet_id: "Errant_Lv1_Captain"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Shiawase Lead Guard"
    GeneralTags: "isSecurity"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 52
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -50
    y: 0
    z: -54
  }
  orientation: ORIENTATION_S
  GeneralTags: "isSecurity"
  GeneralTags: "isInitialAva"
  displayName: "Shiawase Initial Shotgun"
  idRef {
    id: "56129ab864343179244a4a42"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Shiawase/HumanFemaleShiawaseGuard"
    character_sheet_id: "Errant_Lv1_Ork_Shotgun"
    equipment_sheet_id: "Errant_Lv1_Shotgun"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Shiawase"
    char_name: "Shiawase Guard"
    GeneralTags: "isSecurity"
    GeneralTags: "isInitialAva"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 41
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -7
    y: 0
    z: -33
  }
  orientation: ORIENTATION_S
  GeneralTags: "isSecurity"
  displayName: "Shiawase Reinforce 1 Mage"
  idRef {
    id: "5613dfa2643431e641bde91c"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Shiawase/ElfMaleGarra"
    character_sheet_id: "Errant_Lv1_Human_Mage"
    equipment_sheet_id: "Errant_Lv1_Spellcasting"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Mage"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Shiawase"
    char_name: "Shiawase Mage"
    GeneralTags: "isSecurity"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 43
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -8
    y: 0
    z: -32
  }
  orientation: ORIENTATION_S
  GeneralTags: "isSecurity"
  displayName: "Squad 2 Rigger"
  idRef {
    id: "5613dfa2643431e641bde91d"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Shiawase/HumanFemaleShiawaseGuard"
    character_sheet_id: "Errant_Lv1_Rigger"
    equipment_sheet_id: "Errant_Lv1_Rigger_Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_grunt"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Shiawase Rigger"
    GeneralTags: "isSecurity"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 44
    hiring_cost_override: 1000
    scale_character_sheet: true
    cyberware_head: "(Head) Datajack"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -51
    y: 0
    z: -51
  }
  orientation: ORIENTATION_S
  GeneralTags: "isSecurity"
  GeneralTags: "isInitialAva"
  displayName: "Shiawase Initial SMG"
  idRef {
    id: "5613dfa2643431e641bde91e"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Shiawase/HumanMaleShiawaseGuard"
    character_sheet_id: "Errant_Lv1_Heavy_Explosive"
    equipment_sheet_id: "Errant_Lv1_Explosive"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Shiawase"
    char_name: "Shiawase Guard"
    GeneralTags: "isSecurity"
    GeneralTags: "isInitialAva"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 47
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -10
    y: 0
    z: -33
  }
  orientation: ORIENTATION_S
  GeneralTags: "isSecurity"
  displayName: "Shiawase Reinforce 4 SMG"
  idRef {
    id: "5613dfa2643431e641bde91f"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Shiawase/ElfFemaleShiawaseGuard"
    character_sheet_id: "Errant_Lv1_Heavy_Explosive"
    equipment_sheet_id: "Errant_Lv1_Explosive"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Shiawase"
    char_name: "Shiawase Guard"
    GeneralTags: "isSecurity"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 47
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -8
    y: 0
    z: -33
  }
  orientation: ORIENTATION_S
  GeneralTags: "isSecurity"
  displayName: "Shiawase Reinforce 2 Sniper"
  idRef {
    id: "5613dfa2643431e641bde920"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Shiawase/HumanMaleShiawaseGuard"
    character_sheet_id: "Errant_Lv1_Human_Sniper"
    equipment_sheet_id: "Errant_Lv1_Sniper"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Sniper"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Shiawase"
    char_name: "Shiawase Sniper"
    GeneralTags: "isSecurity"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 42
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -9
    y: 0
    z: -27
  }
  orientation: ORIENTATION_S
  GeneralTags: "isErrant"
  GeneralTags: "isInitialErrant"
  idRef {
    id: "5613dfc0643431e641bde921"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:KnightErrants/HumanMaleKnightErrantCaptain"
    character_sheet_id: "Errant_Lv1_Captain"
    equipment_sheet_id: "Errant_Lv1_Captain"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Errant"
    char_name: "Commando Captain"
    GeneralTags: "isErrant"
    GeneralTags: "isInitialErrant"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 52
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -12
    y: 0
    z: -27
  }
  orientation: ORIENTATION_S
  GeneralTags: "isErrant"
  GeneralTags: "isEarlyBackup"
  displayName: "Errant Reinforce 3 SMG"
  idRef {
    id: "5613dfc3643431e641bde922"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:KnightErrants/OrkMaleKnightErrant"
    character_sheet_id: "Errant_Lv1_Heavy_Explosive"
    equipment_sheet_id: "Errant_Lv1_Explosive"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Errant"
    char_name: "Commando Grenadier"
    GeneralTags: "isErrant"
    GeneralTags: "isEarlyBackup"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 47
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -10
    y: 0
    z: -27
  }
  orientation: ORIENTATION_S
  GeneralTags: "isErrant"
  displayName: "Errant Reinforce 1 Mage"
  idRef {
    id: "5613dfc7643431e641bde923"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:KnightErrants/HumanMaleKnightErrantMage"
    character_sheet_id: "Errant_Lv1_Human_Mage"
    equipment_sheet_id: "Errant_Lv1_Spellcasting"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Mage"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Errant"
    char_name: "Commando Mage"
    GeneralTags: "isErrant"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 43
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -7
    y: 0
    z: -27
  }
  orientation: ORIENTATION_S
  GeneralTags: "isErrant"
  GeneralTags: "isInitialErrant"
  idRef {
    id: "5613dfcc643431e641bde924"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:KnightErrants/HumanMaleEliteCorpVanguard"
    character_sheet_id: "Errant_Lv1_Human_Pistol"
    equipment_sheet_id: "Errant_Lv1_Pistol"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Errant"
    char_name: "Commando"
    GeneralTags: "isErrant"
    GeneralTags: "isInitialErrant"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 41
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -8
    y: 0
    z: -27
  }
  orientation: ORIENTATION_S
  GeneralTags: "isErrant"
  GeneralTags: "isInitialErrant"
  idRef {
    id: "5613dfd0643431e641bde925"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:KnightErrants/OrkFemaleKnightErrant"
    character_sheet_id: "Errant_Lv1_Ork_Shotgun"
    equipment_sheet_id: "Errant_Lv1_Shotgun"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Errant"
    char_name: "Commando Enforcer"
    GeneralTags: "isErrant"
    GeneralTags: "isInitialErrant"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 41
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -11
    y: 0
    z: -27
  }
  orientation: ORIENTATION_S
  GeneralTags: "isErrant"
  GeneralTags: "isEarlyBackup"
  displayName: "Errant Reinforce 2 Sniper"
  idRef {
    id: "5613dfd7643431e641bde927"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:KnightErrants/ElfMaleKnightErrant"
    character_sheet_id: "Errant_Lv1_Human_Sniper"
    equipment_sheet_id: "Errant_Lv1_Sniper"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Sniper"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Errant"
    char_name: "Commando Sniper"
    GeneralTags: "isErrant"
    GeneralTags: "isEarlyBackup"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 42
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -12
    y: 0
    z: -26
  }
  orientation: ORIENTATION_S
  GeneralTags: "isErrant"
  GeneralTags: "isEarlyBackup"
  displayName: "Errant Reinforce 4 Shotgun"
  idRef {
    id: "5613e066643431e641bde928"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:KnightErrants/ElfMaleKnightErrant"
    character_sheet_id: "Errant_Lv1_Ork_Shotgun"
    equipment_sheet_id: "Errant_Lv1_Shotgun"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Errant"
    char_name: "Commando"
    GeneralTags: "isErrant"
    GeneralTags: "isEarlyBackup"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 41
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -41
    y: 0
    z: -52
  }
  orientation: ORIENTATION_N
  GeneralTags: "isHPF"
  displayName: "HPF Initial Pistol"
  idRef {
    id: "5613e0d7643431e641bde929"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Homeless/DwarfMaleHomelessJacket"
    character_sheet_id: "Errant_Lv1_Human_Pistol"
    equipment_sheet_id: "Errant_Lv1_Pistol"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "HPF"
    char_name: "HPF Fighter"
    GeneralTags: "isHPF"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 41
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -10
    y: 0
    z: -38
  }
  orientation: ORIENTATION_S
  GeneralTags: "isHPF"
  displayName: "HPF 3 Sniper"
  idRef {
    id: "5613e0d7643431e641bde92a"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Tsang Security/DwarfMaleTsangSecuritySniper"
    character_sheet_id: "Errant_Lv1_Human_Sniper"
    equipment_sheet_id: "Errant_Lv1_Sniper"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Sniper"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "HPF Sniper"
    GeneralTags: "isHPF"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 42
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -9
    y: 0
    z: -39
  }
  orientation: ORIENTATION_S
  GeneralTags: "isHPF"
  displayName: "HPF Reinforce 2 Rigger"
  idRef {
    id: "5613e0d7643431e641bde92b"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:HKCivilians/DwarfMaleCivilian"
    character_sheet_id: "Errant_Lv1_Rigger"
    equipment_sheet_id: "Errant_Lv1_Rigger_Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_grunt"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "HPF"
    char_name: "HPF Rigger"
    GeneralTags: "isHPF"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 44
    hiring_cost_override: 1000
    scale_character_sheet: true
    cyberware_head: "(Head) Datajack"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -7
    y: 0
    z: -26
  }
  orientation: ORIENTATION_S
  GeneralTags: "isErrant"
  GeneralTags: "isInitialErrant"
  displayName: "Eriana"
  idRef {
    id: "5619c08334643530160022b7"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:KnightErrants/ElfFemaleKnightErrantShaman"
    character_sheet_id: "RedSamurai_Lv1_Mage"
    equipment_sheet_id: "RedSamurai_Lv1_Mage"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_Mage"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Errant"
    char_name: "Eriana"
    GeneralTags: "isErrant"
    GeneralTags: "isInitialErrant"
    pc_spawn_number: -1
    portrait {
      filename: "pc_elffemale_09a_sorceress"
    }
    karma: 107
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -30
    y: 0
    z: -57
  }
  orientation: ORIENTATION_W
  displayName: "Debug Zielor"
  idRef {
    id: "566e4f333438376c1e004874"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Story/Audran"
    character_sheet_id: "crew_zielor_lv6"
    equipment_sheet_id: "crew_zielor_lv6_gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Player"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Shadowrunners"
    char_name: "Zielor"
    GeneralTags: "isZielor"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    cyberware_eyes: "(Eyes) Vision Magnification Eyes 2"
    cyberware_left_arm: "(Arm) Auto Loader Cyberarm"
    cyberware_right_arm: "(Arm) Shiawase Magnet Arm"
    cyberware_left_leg: "(Leg) Hydraulic Jack Mk 1"
    portrait {
      filename: "pc_orkmale_08_modhead"
    }
    description_bio: "One of Saito\'s most feared opponents has joined your team, but how long will he stay?"
    karma: 215
    hiring_cost_override: 0
    hiring_tag: "Crew: Freedom Fighter"
    id: "Crew_Lv6_Zielor"
    crew_id: "Crew: Freedom Fighter"
    cyberware_weapon: "Weapon 3 Hand Razor"
    cyberware_skin: "(Skin) Dermal Plating Mk 2"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "avaOpinion"
    typeName: "int"
  }
}
variables {
  int_value: 2
  variableref_value {
    scope: TsVariableScope_Scene
    name: "avaOpinionThreshold"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "askedKroinToBackOff"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "mentionedAres"
    typeName: "bool"
  }
}
variables {
  bool_value: true
  variableref_value {
    scope: TsVariableScope_Scene
    name: "isHemlockEnabled"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "hemlockTurns"
    typeName: "int"
  }
}
variables {
  int_value: 4
  variableref_value {
    scope: TsVariableScope_Scene
    name: "hemlockTurnsMax"
    typeName: "int"
  }
}
variables {
  string_value: "Agh!"
  variableref_value {
    scope: TsVariableScope_Scene
    name: "pain"
    typeName: "string"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "disabledHemlock"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "canExit"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "isDebugging"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Bark"
    typeName: "int"
  }
}
mapEvents: "Stairs Transition"
mapEvents: "Event_CausedPain"
mapEvents: "Event_DivertHemlock"
mapEvents: "Event_AllUpstairs"
mapEvents: "Event_MatrixPlayTeleportSound"
mapEvents: "Event_TeleportCameraToPC0"
senseTags: "isDorbi"
senseTags: "isPersi"
senseTags: "isRafik"
senseTags: "isSable"
senseTags: "isKora"
senseTags: "isZielor"
goals {
  name: "You Died"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Contact Eriana for Reinforcements"
  type: GoalType_Secondary
  status: GoalStatus_Hidden
}
goals {
  name: "Defeat the HPF"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Defeat Shiawase Security"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Defeat Eriana"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Prevent the Spread of Hemlock"
  type: GoalType_Secondary
  status: GoalStatus_Hidden
}
goals {
  name: "Exit the Facility"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "cc_a5_climax_s3"
parentStory: ""
scene_title: "IN DUBIOUS BATTLE"
scene_subtitle: ""
scene_synopsis: "It will all end here, one way or another."
scene_image: "cc_a5_climax_s3"
scene_continue_button_skip: false
scene_restore_runner_health: false
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 1
}
team_affiliations {
  team_name: "Gangers"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 1
}
team_affiliations {
  team_name: "LoneStar"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 1
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 1
}
team_affiliations {
  team_name: "HPF"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 1
}
team_affiliations {
  team_name: "Shiawase"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 1
}
team_affiliations {
  team_name: "Errant"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 1
}
team_affiliations {
  team_name: "Zielor"
  affiliation: 1
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 1
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
}
scene_dimensions {
  dimension_name: "Matrix"
  initial_alarm_state: 0
  turns_per_round: 3
  is_matrix: true
  max_alarm_value: 100
  heat_response_rating: 9
}
character_roster {
}
show_hiring_screen_on_scene_load: false
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 0
hiring_minimum_karma: 0
hiring_maximum_karma: 0
roster_overrides {
}
use_hiring_cost_warning: false
hiring_average_cost: 99999
override_hiring_average_cost: true
show_equip_screen_on_scene_load: false
is_persistant: false
is_persistant_has_value: false
can_move_outside_camera_regions: false
can_start_before_triggers: false
can_use_team_advancement: false
